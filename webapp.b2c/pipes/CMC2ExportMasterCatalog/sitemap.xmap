<?xml version="1.0"?>
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">

  <map:resources>
    <!-- the sql resource provides a central place to edit database details -->
    <map:resource name="sql">
      <map:transform type="sql">
        <map:parameter name="use-connection" value="oracleDbCMC"/>
        <map:parameter name="clob-encoding" value="UTF-8"/>
      </map:transform>
    </map:resource>
  </map:resources>


  <map:components>
    <map:transformers default="xslt">
      <map:transformer name="shell" src="org.apache.cocoon.transformation.FileActionsTransformer"/>
    </map:transformers>
    <map:actions>
      <map:action name="synced-copy-source" src="org.apache.cocoon.acting.SyncedCopySourceAction"/>
    </map:actions>
  </map:components>

  <map:pipelines>

    <map:component-configurations>
      <global-variables>
        <ldir>CMC2ExportMasterCatalog/</ldir>
        <productsdir>PMT_Raw/</productsdir>
        <pctproductsdir>PCT_Translated/</pctproductsdir>
        <catalogDefDir>catalog_definition/</catalogDefDir>
        <contentTypeDir>ProductMasterData/</contentTypeDir>
        <channel>CMC2ExportMasterCatalog</channel>
      </global-variables>
    </map:component-configurations>
    <!--
      Create ProductMasterData Catalog definition.
      Create ProductMasterData input.
      
      Both feeds are created from the files that are present in a specific directory
      inside the PMT_Raw/PCT_Raw data directories.
      
      Request parameters:
      runmode:    If FASTLANE create only the catalog definition file.
      sourceDir:  Source directory to use for creating the data. Defaults to 'inbox'.
    -->
    <map:pipeline name="{global:channel}" type="noncaching">
      <map:match pattern="runPipeline">
        <!-- This is the starting point of the pipeline. A lock is requested to prevent this pipeline from running multiple times in parallel.
        When a lock cannot be acquired, an error message is shown. If a lock can be acquired, run exportMain -->
        <map:act type="synced-copy-source" src="cocoon:/exportStart">
          <map:parameter name="lockName" value="{global:channel}"/>
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/import.xml"/>
          <map:generate src="{global:gdir}{global:ldir}temp/import.xml"/>
          <map:serialize type="xml"/>
        </map:act>
        <map:generate src="../common/xml/locked.xml"/>
        <map:serialize type="xml"/>
      </map:match>

      <map:match pattern="exportStart">
        <!-- Set Start Time.of this channel-->
        <map:act type="copy-source" src="cocoon:/runsql_setstarttime">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportSetStartTime.xml"/>
        </map:act>
        <!-- Create the ProductMasterDataCatalog def file -->
        <map:act type="copy-source" src="cocoon:/createProductMasterDataCatalogDef">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportExportCatalog.xml"/>
        </map:act>
        
        <map:select type="parameter">
          <map:parameter name="parameter-selector-test" value="{request-param:runmode}"/>
          <map:when test="FASTLANE">
	      </map:when>
	      <map:otherwise>
	        <!-- Create the ProductMasterData content_type input file -->
            <map:act type="copy-source" src="cocoon:/createProductMasterDataCatalogInput">
              <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportExportData.xml"/>
            </map:act>
	      </map:otherwise>
	    </map:select>
        <!-- Archive files -->
        <map:act type="copy-source" src="cocoon:/archiveFiles">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportArchiveFiles.xml"/>
        </map:act>
        <!-- Set End Time of this channel-->
        <map:act type="copy-source" src="cocoon:/runsql_setendtime">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportSetEndTime.xml"/>
        </map:act>
        <!-- Show result -->
        <map:act type="copy-source" src="cocoon:/runsql_gettimings">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportGetTimings.xml"/>
        </map:act>
        <map:generate src="{global:gdir}{global:ldir}temp/ReportGetTimings.xml"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- Run SQL command -->
      <map:match pattern="runsql_*">
        <map:generate src="../common/xml/empty.xml"/>
        <map:select type="parameter">
          <map:parameter name="parameter-selector-test" value="{request-param:runmode}"/>
          <map:when test="FASTLANE">
            <map:transform type="xslt-saxon" src="../common/xsl/{global:db}sql_{1}.xsl">
              <map:parameter name="channel" value="{global:channel}FL"/>
              <map:parameter name="run_id" value="{request-param:runId}"/>
              <map:parameter name="run_mode" value="{request-param:runmode}"/>
            </map:transform>
          </map:when>
          <map:otherwise>
            <map:transform type="xslt-saxon" src="../common/xsl/{global:db}sql_{1}.xsl">
              <map:parameter name="channel" value="{global:channel}"/>
              <map:parameter name="run_id" value="{request-param:runId}"/>
              <map:parameter name="run_mode" value="{request-param:runmode}"/>
            </map:transform>           
          </map:otherwise>
        </map:select>
        <map:call resource="sql"/>
        <map:serialize type="xml"/>
      </map:match>

      <map:match pattern="createProductMasterDataCatalogDef">
        <map:act type="copy-source" src="cocoon:/deleteTempFiles">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportDeleteTmpFilesReport.xml"/>
        </map:act>
        <map:generate src="../common/xml/empty.xml"/>
        <map:transform type="xslt-saxon" src="xsl/includeCatalogDef.xsl">
          <map:parameter name="productsdir" value="{global:productsdir}"/>
          <map:parameter name="pctproductsdir" value="{global:pctproductsdir}"/>
          <map:parameter name="source-sub-dir" value="{request-param:sourceDir}"/>
          <map:parameter name="runmode" value="{request-param:runmode}"/>
        </map:transform>       
        <map:transform type="cinclude"/>   
        <map:transform type="xslt-saxon" src="xsl/mergeCatalogDefs.xsl"/>
        <map:transform type="xslt-saxon" src="xsl/removeCatalogDefDuplicates.xsl"/>   
        <!-- write to disk -->
        <map:transform type="write-source"/>
        <map:serialize type="xml"/>
      </map:match>        

      <map:match pattern="createProductMasterDataCatalogDefSub.*.**">
        <map:generate type="xpathdirectory" src="{global:gdir}{2}" label="step1">
          <map:parameter name="xpath" value="/Products/Product/CTN"/>
          <map:parameter name="xmlFiles" value=".*\.xml"/>
          <map:parameter name="include" value=".*\.xml"/>
        </map:generate>
        <map:transform type="stx" src="xsl/formatProductMasterDataCatalogDef.stx" label="step3">
          <map:parameter name="dir" value="{global:gdir}{global:ldir}outbox/"/>
          <map:parameter name="prefix" value="{1}"/>
          <map:parameter name="timestamp19" value="{date:yyyy-MM-dd}T{date:HH:mm:ss}"/>
        </map:transform>
        <map:transform type="xslt-saxon" src="xsl/removeCatalogDefDuplicates.xsl"/>        
        <map:serialize type="xml"/>
      </map:match>

      <map:match pattern="createProductMasterDataCatalogInput">
        <map:act type="copy-source" src="cocoon:/deleteTempFiles">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportDeleteTmpFilesReport.xml"/>
        </map:act>
        <map:generate src="../common/xml/empty.xml"/>
        <map:transform type="xslt-saxon" src="xsl/includeCatalogInput.xsl">
          <map:parameter name="productsdir" value="{global:productsdir}"/>
          <map:parameter name="source-sub-dir" value="{request-param:sourceDir}"/>
        </map:transform>        
        <map:transform type="cinclude"/>                
        <!--map:transform type="xslt-saxon" src="xsl/mergeCatalogInput.xsl"/-->
        <!-- write to disk -->
        <map:serialize type="xml"/>
      </map:match>        

      <map:match pattern="createProductMasterDataCatalogInputSub.*.**">
        <map:generate type="xpathdirectory" src="{global:gdir}{2}" label="step1">
          <map:parameter name="xpath" value="/Products/Product"/>
          <map:parameter name="xmlFiles" value=".*\.xml"/>
          <map:parameter name="include" value=".*\.xml"/>
        </map:generate>
        <map:transform type="stx" src="xsl/formatProductMasterDataInput.stx" label="step3">
          <map:parameter name="dir" value="{global:gdir}{global:ldir}outbox/"/>
          <map:parameter name="prefix" value="ProductMasterData"/>
          <map:parameter name="timestamp19" value="{date:yyyy-MM-dd}T{date:HH:mm:ss}"/>
        </map:transform>    
        <!-- write to disk -->
        <map:transform type="write-source"/>
        <map:serialize type="xml"/>
      </map:match>

      <map:match pattern="genReport.*.*.*">
        <map:generate src="../common/xml/empty.xml"/>
        <map:transform src="../common/xsl/sql_genreport.xsl">
          <map:parameter name="exportdate" value="{1}"/>
          <map:parameter name="country" value="{2}"/>
          <map:parameter name="locale" value="{3}"/>
          <map:parameter name="channel" value="{global:channel}"/>
        </map:transform>
        <map:call resource="sql"/>
        <map:serialize type="xml"/>
      </map:match>

      <map:match pattern="updateExportDate.*.*.*">
        <map:generate src="../common/xml/empty.xml"/>
        <map:transform src="xsl/{global:db}sql_updatetransmitdate.xsl" label="step1">
          <map:parameter name="exportdate" value="{1}"/>
          <map:parameter name="country" value="{2}"/>
          <map:parameter name="locale" value="{3}"/>
          <map:parameter name="channel" value="{global:channel}"/>
        </map:transform>
        <map:call resource="sql"/>
        <map:serialize type="xml"/>
      </map:match>

      <map:match pattern="archiveFiles">
        <!-- Archive all files in inbox -->
        <!-- Retrieve all files in inbox -->
        <map:generate type="directory" src="{global:gdir}{global:ldir}outbox">
          <map:parameter name="dateFormat" value="yyyy-MM-dd hh:mm"/>
          <map:parameter name="depth" value="1"/>
          <map:parameter name="include" value=".*"/>
        </map:generate>
        <!-- Move files to archive -->
        <map:transform type="xslt-saxon" src="xsl/dir2shell_move.xsl">
          <map:parameter name="sourceDir" value="{global:gdir}{global:ldir}outbox"/>
          <map:parameter name="targetDir" value="{global:gdir}{global:ldir}archive"/>
          <map:parameter name="catalogDefDir" value="{global:gdir}{global:catalogDefDir}"/>
          <map:parameter name="contentTypeDir" value="{global:gdir}{global:contentTypeDir}inbox"/>
        </map:transform>      
        <map:transform type="shell"/>
        <map:serialize type="xml"/>
      </map:match>

      <map:match pattern="deleteTempFiles">
        <!-- Delete all files in temp directory -->
        <!-- Retrieve all files in temp directory -->
        <map:generate type="directory" src="{global:gdir}{global:ldir}temp">
          <map:parameter name="dateFormat" value="yyyy-MM-dd hh:mm"/>
          <map:parameter name="depth" value="1"/>
          <map:parameter name="include" value=".*"/>
        </map:generate>
        <!-- Delete all files -->
        <map:transform src="../common/xsl/dir2shell_delete.xsl">
          <map:parameter name="dir" value="{global:gdir}{global:ldir}temp"/>
        </map:transform>
        <map:transform type="shell" />
        <map:serialize type="xml"/>
      </map:match>

      <map:match pattern="deleteArchiveFiles">
        <!-- Delete all files in {global:gdir}{global:ldir}temp directory -->
        <!-- Retrieve all files in {global:gdir}{global:ldir}temp directory -->
        <map:generate type="directory" src="{global:gdir}{global:ldir}archive">
          <map:parameter name="dateFormat" value="yyyy-MM-dd hh:mm"/>
          <map:parameter name="depth" value="1"/>
          <map:parameter name="include" value=".*"/>
        </map:generate>
        <!-- Delete all files -->
        <map:transform src="../common/xsl/dir2shell_delete.xsl">
          <map:parameter name="dir" value="{global:gdir}{global:ldir}archive"/>
        </map:transform>
        <map:transform type="shell" />
        <map:serialize type="xml"/>
      </map:match>
    </map:pipeline>
  </map:pipelines>

</map:sitemap>
