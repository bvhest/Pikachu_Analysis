<?xml version="1.0" encoding="UTF-8"?>
<rng:grammar xmlns:rng="http://relaxng.org/ns/structure/1.0"
             xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
             xmlns="http://www.w3.org/2001/XMLSchema"
             xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
             ns="http://www.w3.org/1999/XSL/Transform"
             datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
	  <a:documentation xmlns="">
		A Schema for XSLT - Don Box (http://www.develop.com/dbox)
		Thanks to Curt Arnold for catching some errors along the way.
	</a:documentation>
	  <!-- internal types -->
	<rng:define xmlns="" name="CDATA">
		    <rng:ref name="string"/>
	  </rng:define>
	  <rng:define xmlns="" name="avt">
		    <a:documentation>
			
		</a:documentation>
		    <rng:ref name="string"/>
	  </rng:define>
	  <rng:define xmlns="" name="pattern">
		    <a:documentation>
			
		</a:documentation>
		    <rng:ref name="string"/>
	  </rng:define>
	  <rng:define xmlns="" name="expr">
		    <a:documentation>
			
		</a:documentation>
		    <rng:ref name="string"/>
	  </rng:define>
	  <rng:define xmlns="" name="single-multiple-any">
		    <rng:choice>
			      <rng:value>single</rng:value>
			      <rng:value>multiple</rng:value>
			      <rng:value>any</rng:value>
		    </rng:choice>
	  </rng:define>
	  <rng:define xmlns="" name="XPathNumber">
		    <a:documentation>
			
		</a:documentation>
		    <rng:ref name="decimal"/>
	  </rng:define>
	  <rng:define xmlns="" name="char">
		    <rng:ref name="string"/>
			   <!--rng:param name="minLength">1</rng:param>
			   <rng:param name="maxLength">1</rng:param-->
		
	  </rng:define>
	  <rng:define xmlns="" name="yesno">
		    <rng:choice>
			      <rng:value>yes</rng:value>
			      <rng:value>no</rng:value>
		    </rng:choice>
	  </rng:define>
	  <rng:define xmlns="" name="QNames">
		    <rng:list>
         <rng:ref name="QName"/>
      </rng:list>
	  </rng:define>
	  <!-- literal result element attributes -->
	<!--rng:optional xmlns="">
      <rng:attribute name="version">
         <rng:ref name="CDATA"/>
      </rng:attribute>
   </rng:optional>
	<rng:optional xmlns="">
      <rng:attribute name="extension-element-prefixes">
         <rng:ref name="CDATA"/>
      </rng:attribute>
   </rng:optional>
	  <rng:optional xmlns="">
      <rng:attribute name="exclude-result-prefixes">
         <rng:ref name="CDATA"/>
      </rng:attribute>
   </rng:optional>
	  <rng:optional xmlns="">
      <rng:attribute name="use-attribute-sets">
         <rng:ref name="QNames"/>
      </rng:attribute>
   </rng:optional-->
	  <!-- exemplars for the equiv classes -->
	<rng:start xmlns="" combine="choice">
      <rng:ref name="instruction"/>
   </rng:start>
   <rng:define xmlns="" name="instruction">
      <rng:element name="instruction"/>
   </rng:define>
	  <rng:start xmlns="" combine="choice">
      <rng:ref name="char-instruction"/>
   </rng:start>
   <rng:define xmlns="" name="char-instruction">
      <rng:element name="char-instruction"/>
   </rng:define>
	  <rng:define xmlns="" name="char-template">
		
			   <rng:ref name="char-instruction"/>
		
	  </rng:define>
	  <rng:define xmlns="" name="template">
		
			   <rng:ref name="instruction"/>
			   <rng:element>
         <rng:anyName/>
         <rng:text/>
      </rng:element>
		
	  </rng:define>
	  <rng:define xmlns="" name="variable-definition">
		
			   <rng:ref name="template"/>
				  <rng:attribute name="name">
         <rng:ref name="QName"/>
      </rng:attribute>
				  <rng:optional>
         <rng:attribute name="select">
            <rng:ref name="expr"/>
         </rng:attribute>
      </rng:optional>
			
		
	  </rng:define>
	  <rng:define xmlns="" name="char-template-with-space">
		
			   <rng:ref name="char-template"/>
				  <rng:attribute name="space" ns="http://www.w3.org/XML/1998/namespace">
         <rng:choice>
            <rng:value>default</rng:value>
            <rng:value>preserve</rng:value>
         </rng:choice>
      </rng:attribute>
			
		
	  </rng:define>
	  <rng:define xmlns="" name="template-with-space">
		
			   <rng:ref name="template"/>
				  <rng:attribute name="space" ns="http://www.w3.org/XML/1998/namespace">
         <rng:choice>
            <rng:value>default</rng:value>
            <rng:value>preserve</rng:value>
         </rng:choice>
      </rng:attribute>
			
		
	  </rng:define>
	  <rng:define xmlns="" name="named-template">
		
			   <rng:ref name="template-with-space"/>
				
					<rng:element name="param">
         <rng:ref name="variable-definition"/>
      </rng:element>
				
				  <rng:optional>
         <rng:attribute name="match">
            <rng:ref name="pattern"/>
         </rng:attribute>
      </rng:optional>
				  <rng:optional>
         <rng:attribute name="name">
            <rng:ref name="QName"/>
         </rng:attribute>
      </rng:optional>
				  <rng:optional>
         <rng:attribute name="priority">
            <rng:ref name="XPathNumber"/>
         </rng:attribute>
      </rng:optional>
				  <rng:optional>
         <rng:attribute name="mode">
            <rng:ref name="QName"/>
         </rng:attribute>
      </rng:optional>
			
		
	  </rng:define>
	  <rng:define xmlns="" name="conditional-template">
		
			   <rng:ref name="template-with-space"/>
				  <rng:optional>
         <rng:attribute name="test">
            <rng:ref name="expr"/>
         </rng:attribute>
      </rng:optional>
			
		
	  </rng:define>
	  <rng:define xmlns="" name="import-or-include">
		    <rng:attribute name="href">
         <rng:ref name="anyURI"/>
      </rng:attribute>
	  </rng:define>
	  <rng:define xmlns="" name="sort">
		    <rng:optional>
         <rng:attribute name="select" a:defaultValue=".">
            <rng:ref name="expr"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="lang">
            <rng:ref name="avt"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="data-type" a:defaultValue="text">
            <rng:ref name="avt"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="order" a:defaultValue="ascending">
            <rng:ref name="avt"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="case-order">
            <rng:ref name="avt"/>
         </rng:attribute>
      </rng:optional>
	  </rng:define>
	  <rng:define xmlns="" name="for-each">
		
			   <rng:ref name="template-with-space"/>
				
					<rng:zeroOrMore>
         <rng:element name="sort">
            <rng:ref name="sort"/>
         </rng:element>
      </rng:zeroOrMore>
				
				  <rng:attribute name="select">
         <rng:ref name="expr"/>
      </rng:attribute>
			
		
	  </rng:define>
	  <rng:define xmlns="" name="choose">
		
			   <rng:oneOrMore>
         <rng:element name="when">
            <rng:ref name="conditional-template"/>
         </rng:element>
      </rng:oneOrMore>
			   <rng:optional>
         <rng:element name="otherwise">
            <rng:ref name="template-with-space"/>
         </rng:element>
      </rng:optional>
		
	  </rng:define>
	  <rng:define xmlns="" name="call-template">
		
			   <rng:zeroOrMore>
         <rng:element name="with-param">
            <rng:ref name="variable-definition"/>
         </rng:element>
      </rng:zeroOrMore>
		
		    <rng:attribute name="name">
         <rng:ref name="QName"/>
      </rng:attribute>
	  </rng:define>
	  <rng:define xmlns="" name="apply-templates">
		    <rng:zeroOrMore>
         <rng:choice>
			         <rng:element name="with-param">
               <rng:ref name="variable-definition"/>
            </rng:element>
			         <rng:element name="sort">
               <rng:ref name="sort"/>
            </rng:element>
		       </rng:choice>
      </rng:zeroOrMore>
		    <rng:optional>
         <rng:attribute name="select" a:defaultValue="node()">
            <rng:ref name="expr"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="mode">
            <rng:ref name="QName"/>
         </rng:attribute>
      </rng:optional>
	  </rng:define>
	  <rng:define xmlns="" name="copy">
		
			   <rng:ref name="template-with-space"/>
				  <rng:optional>
         <rng:attribute name="use-attribute-sets">
            <rng:ref name="QNames"/>
         </rng:attribute>
      </rng:optional>
			
		
	  </rng:define>
	  <rng:define xmlns="" name="copy-of">
		    <rng:attribute name="select">
         <rng:ref name="expr"/>
      </rng:attribute>
	  </rng:define>
	  <rng:define xmlns="" name="value-of">
		
			   <rng:ref name="copy-of"/>
				  <rng:optional>
         <rng:attribute name="disable-output-escaping" a:defaultValue="no">
            <rng:ref name="yesno"/>
         </rng:attribute>
      </rng:optional>
			
		
	  </rng:define>
	  <rng:define xmlns="" name="message">
		
			   <rng:ref name="template-with-space"/>
				  <rng:optional>
         <rng:attribute name="terminate" a:defaultValue="no">
            <rng:ref name="yesno"/>
         </rng:attribute>
      </rng:optional>
			
		
	  </rng:define>
	  <rng:define xmlns="" name="apply-imports"/>
	  <rng:define xmlns="" name="number">
		    <rng:optional>
         <rng:attribute name="level" a:defaultValue="single">
            <rng:ref name="single-multiple-any"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="count">
            <rng:ref name="pattern"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="from">
            <rng:ref name="pattern"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="value">
            <rng:ref name="expr"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="format" a:defaultValue="1">
            <rng:ref name="avt"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="lang">
            <rng:ref name="avt"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="letter-value">
            <rng:ref name="avt"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="grouping-separator">
            <rng:ref name="avt"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="grouping-size">
            <rng:ref name="avt"/>
         </rng:attribute>
      </rng:optional>
	  </rng:define>
	  <rng:define xmlns="" name="text">
		    <rng:optional>
         <rng:attribute name="disable-output-escaping" a:defaultValue="no">
            <rng:ref name="yesno"/>
         </rng:attribute>
      </rng:optional>
	  </rng:define>
	  <rng:define xmlns="" name="processing-instruction">
		
			   <rng:ref name="char-template-with-space"/>
				  <rng:attribute name="name">
         <rng:ref name="avt"/>
      </rng:attribute>
			
		
	  </rng:define>
	  <rng:define xmlns="" name="attribute">
		
			   <rng:ref name="processing-instruction"/>
				  <rng:optional>
         <rng:attribute name="namespace">
            <rng:ref name="avt"/>
         </rng:attribute>
      </rng:optional>
			
		
	  </rng:define>
	  <rng:define xmlns="" name="element">
		
			   <rng:ref name="template-with-space"/>
				  <rng:attribute name="name">
         <rng:ref name="avt"/>
      </rng:attribute>
				  <rng:optional>
         <rng:attribute name="namespace">
            <rng:ref name="avt"/>
         </rng:attribute>
      </rng:optional>
				  <rng:optional>
         <rng:attribute name="use-attribute-sets">
            <rng:ref name="QNames"/>
         </rng:attribute>
      </rng:optional>
			
		
	  </rng:define>
	  <rng:define xmlns="" name="preserve-or-strip-space">
		    <rng:attribute name="elements">
         <rng:ref name="QNames"/>
      </rng:attribute>
	  </rng:define>
	  <rng:define xmlns="" name="output">
		    <rng:optional>
         <rng:attribute name="method">
            <rng:ref name="QName"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="version">
            <rng:ref name="NMTOKEN"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="encoding">
            <rng:ref name="CDATA"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="omit-xml-declaration">
            <rng:ref name="yesno"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="standalone">
            <rng:ref name="yesno"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="doctype-public">
            <rng:ref name="string"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="doctype-system">
            <rng:ref name="string"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="cdata-section-elements">
            <rng:ref name="QNames"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="indent">
            <rng:ref name="yesno"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="media-type">
            <rng:ref name="CDATA"/>
         </rng:attribute>
      </rng:optional>
	  </rng:define>
	  <rng:define xmlns="" name="key">
		    <rng:attribute name="name">
         <rng:ref name="QName"/>
      </rng:attribute>
		    <rng:attribute name="match">
         <rng:ref name="pattern"/>
      </rng:attribute>
		    <rng:attribute name="use">
         <rng:ref name="expr"/>
      </rng:attribute>
	  </rng:define>
	  <rng:define xmlns="" name="decimal-format">
		    <rng:optional>
         <rng:attribute name="name">
            <rng:ref name="QName"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="decimal-separator" a:defaultValue=".">
            <rng:ref name="char"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="grouping-separator" a:defaultValue=",">
            <rng:ref name="char"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="infinity" a:defaultValue="Infinity">
            <rng:ref name="CDATA"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="minus-sign" a:defaultValue="-">
            <rng:ref name="char"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="NaN" a:defaultValue="NaN">
            <rng:ref name="CDATA"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="percent" a:defaultValue="%">
            <rng:ref name="char"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="per-mille" a:defaultValue="‰">
            <rng:ref name="char"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="zero-digit" a:defaultValue="0">
            <rng:ref name="char"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="digit" a:defaultValue="#">
            <rng:ref name="char"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="pattern-separator" a:defaultValue=";">
            <rng:ref name="char"/>
         </rng:attribute>
      </rng:optional>
	  </rng:define>
	  <rng:define xmlns="" name="attribute-set">
		
			   <rng:zeroOrMore>
         <rng:ref name="attribute"/>
      </rng:zeroOrMore>
		
		    <rng:attribute name="name">
         <rng:ref name="QName"/>
      </rng:attribute>
		    <rng:optional>
         <rng:attribute name="use-attribute-sets">
            <rng:ref name="QNames"/>
         </rng:attribute>
      </rng:optional>
	  </rng:define>
	  <rng:define xmlns="" name="namespace-alias">
		    <rng:attribute name="stylesheet-prefix">
         <rng:ref name="CDATA"/>
      </rng:attribute>
		    <rng:attribute name="result-prefix">
         <rng:ref name="CDATA"/>
      </rng:attribute>
	  </rng:define>
	  <rng:start xmlns="" combine="choice">
      <rng:ref name="apply-templates"/>
   </rng:start>
   <rng:define xmlns="" name="apply-templates">
      <rng:element name="apply-templates">
         <rng:ref name="apply-templates"/>
      </rng:element>
   </rng:define>
	  <rng:start xmlns="" combine="choice">
      <rng:ref name="call-template"/>
   </rng:start>
   <rng:define xmlns="" name="call-template">
      <rng:element name="call-template">
         <rng:ref name="call-template"/>
      </rng:element>
   </rng:define>
	  <rng:start xmlns="" combine="choice">
      <rng:ref name="apply-imports"/>
   </rng:start>
   <rng:define xmlns="" name="apply-imports">
      <rng:element name="apply-imports">
         <rng:ref name="apply-imports"/>
      </rng:element>
   </rng:define>
	  <rng:start xmlns="" combine="choice">
      <rng:ref name="for-each"/>
   </rng:start>
   <rng:define xmlns="" name="for-each">
      <rng:element name="for-each">
         <rng:ref name="for-each"/>
      </rng:element>
   </rng:define>
	  <rng:start xmlns="" combine="choice">
      <rng:ref name="value-of"/>
   </rng:start>
   <rng:define xmlns="" name="value-of">
      <rng:element name="value-of">
         <rng:ref name="value-of"/>
      </rng:element>
   </rng:define>
	  <rng:start xmlns="" combine="choice">
      <rng:ref name="copy-of"/>
   </rng:start>
   <rng:define xmlns="" name="copy-of">
      <rng:element name="copy-of">
         <rng:ref name="copy-of"/>
      </rng:element>
   </rng:define>
	  <rng:start xmlns="" combine="choice">
      <rng:ref name="number"/>
   </rng:start>
   <rng:define xmlns="" name="number">
      <rng:element name="number">
         <rng:ref name="number"/>
      </rng:element>
   </rng:define>
	  <rng:start xmlns="" combine="choice">
      <rng:ref name="choose"/>
   </rng:start>
   <rng:define xmlns="" name="choose">
      <rng:element name="choose">
         <rng:ref name="choose"/>
      </rng:element>
   </rng:define>
	  <rng:start xmlns="" combine="choice">
      <rng:ref name="if"/>
   </rng:start>
   <rng:define xmlns="" name="if">
      <rng:element name="if">
         <rng:ref name="conditional-template"/>
      </rng:element>
   </rng:define>
	  <rng:start xmlns="" combine="choice">
      <rng:ref name="text"/>
   </rng:start>
   <rng:define xmlns="" name="text">
      <rng:element name="text">
         <rng:ref name="text"/>
      </rng:element>
   </rng:define>
	  <rng:start xmlns="" combine="choice">
      <rng:ref name="copy"/>
   </rng:start>
   <rng:define xmlns="" name="copy">
      <rng:element name="copy">
         <rng:ref name="copy"/>
      </rng:element>
   </rng:define>
	  <rng:start xmlns="" combine="choice">
      <rng:ref name="variable"/>
   </rng:start>
   <rng:define xmlns="" name="variable">
      <rng:element name="variable">
         <rng:ref name="variable-definition"/>
      </rng:element>
   </rng:define>
	  <rng:start xmlns="" combine="choice">
      <rng:ref name="message"/>
   </rng:start>
   <rng:define xmlns="" name="message">
      <rng:element name="message">
         <rng:ref name="message"/>
      </rng:element>
   </rng:define>
	  <rng:start xmlns="" combine="choice">
      <rng:ref name="fallback"/>
   </rng:start>
   <rng:define xmlns="" name="fallback">
      <rng:element name="fallback">
         <rng:ref name="template-with-space"/>
      </rng:element>
   </rng:define>
	  <rng:start xmlns="" combine="choice">
      <rng:ref name="comment"/>
   </rng:start>
   <rng:define xmlns="" name="comment">
      <rng:element name="comment">
         <rng:ref name="char-template-with-space"/>
      </rng:element>
   </rng:define>
	  <rng:start xmlns="" combine="choice">
      <rng:ref name="processing-instruction"/>
   </rng:start>
   <rng:define xmlns="" name="processing-instruction">
      <rng:element name="processing-instruction">
         <rng:ref name="processing-instruction"/>
      </rng:element>
   </rng:define>
	  <rng:start xmlns="" combine="choice">
      <rng:ref name="attribute"/>
   </rng:start>
   <rng:define xmlns="" name="attribute">
      <rng:element name="attribute">
         <rng:ref name="attribute"/>
      </rng:element>
   </rng:define>
	  <rng:start xmlns="" combine="choice">
      <rng:ref name="element"/>
   </rng:start>
   <rng:define xmlns="" name="element">
      <rng:element name="element">
         <rng:ref name="element"/>
      </rng:element>
   </rng:define>
	  <rng:define xmlns="" name="stylesheet">
		
			   <rng:zeroOrMore>
         <rng:element name="import">
            <rng:ref name="import-or-include"/>
         </rng:element>
      </rng:zeroOrMore>
			   <rng:zeroOrMore>
         <rng:choice>
				        <rng:element name="include">
               <rng:ref name="import-or-include"/>
            </rng:element>
				        <rng:element name="strip-space">
               <rng:ref name="preserve-or-strip-space"/>
            </rng:element>
				        <rng:element name="preserve-space">
               <rng:ref name="preserve-or-strip-space"/>
            </rng:element>
				        <rng:element name="output">
               <rng:ref name="output"/>
            </rng:element>
				        <rng:element name="key">
               <rng:ref name="key"/>
            </rng:element>
				        <rng:element name="decimal-format">
               <rng:ref name="decimal-format"/>
            </rng:element>
				        <rng:element name="attribute-set">
               <rng:ref name="attribute-set"/>
            </rng:element>
				        <rng:element name="variable">
               <rng:ref name="variable-definition"/>
            </rng:element>
				        <rng:element name="param">
               <rng:ref name="variable-definition"/>
            </rng:element>
				        <rng:element name="template">
               <rng:ref name="named-template"/>
            </rng:element>
				        <rng:element name="namespace-alias">
               <rng:ref name="namespace-alias"/>
            </rng:element>
				        <rng:element>
               <rng:anyName/>
               <rng:text/>
            </rng:element>
			      </rng:choice>
      </rng:zeroOrMore>
		
		    <rng:attribute name="version">
         <rng:ref name="string"/>
      </rng:attribute>
		    <rng:optional>
         <rng:attribute name="extension-element-prefixes">
            <rng:ref name="string"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="exclude-result-prefixes">
            <rng:ref name="string"/>
         </rng:attribute>
      </rng:optional>
		    <rng:optional>
         <rng:attribute name="use-attribute-sets">
            <rng:ref name="QNames"/>
         </rng:attribute>
      </rng:optional>
	  </rng:define>
	  <rng:start xmlns="" combine="choice">
      <rng:ref name="stylesheet"/>
   </rng:start>
   <rng:define xmlns="" name="stylesheet">
      <rng:element name="stylesheet">
         <rng:ref name="stylesheet"/>
      </rng:element>
   </rng:define>
	  <rng:start xmlns="" combine="choice">
      <rng:ref name="transform"/>
   </rng:start>
   <rng:define xmlns="" name="transform">
      <rng:element name="transform">
         <rng:ref name="stylesheet"/>
      </rng:element>
   </rng:define>
</rng:grammar>