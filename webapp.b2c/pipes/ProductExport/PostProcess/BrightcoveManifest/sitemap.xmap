<?xml version="1.0"?>

<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">
  <map:components>
    <map:transformers default="xslt">
      <map:transformer name="shell" src="org.apache.cocoon.transformation.FileActionsTransformer" />
    </map:transformers>
    <map:actions>
      <map:action name="synced-copy-source" src="org.apache.cocoon.acting.SyncedCopySourceAction" />
    </map:actions>
  </map:components>
  <!-- -->
  <map:resources>
    <map:resource name="sql">
      <map:transform type="sql">
        <map:parameter name="use-connection" value="oracleDbCMC" />
        <map:parameter name="clob-encoding" value="UTF-8" />
      </map:transform>
    </map:resource>
  </map:resources>
  <map:pipelines>

    <map:component-configurations>
      <global-variables>
        <channel>ProductExport.BrightcoveManifest</channel>
        <ldir>BrightcoveManifest/</ldir>
      </global-variables>
    </map:component-configurations>

    <map:pipeline type="noncaching">
      <map:match pattern="run">
        <map:generate type="directory" src="../../{global:gdir}{global:ldir}outbox">
          <map:parameter name="dateFormat" value="yyyy-MM-dd hh:mm" />
          <map:parameter name="depth" value="1" />
          <map:parameter name="include" value="^PhilipsCatalog.*\.xml" />
        </map:generate>
        <map:transform type="xslt-saxon" src="xsl/dir2include.xsl">
          <map:parameter name="sourceDir" value="../../{global:gdir}{global:ldir}outbox" />
        </map:transform>
        <map:transform type="include" />
        <map:transform type="shell" />
        <map:serialize type="xml" />
      </map:match>
      <!-- 
        {1} ts
        {2} country
        {3} locale
      -->
      <map:match pattern="deleteTitles.*.*.*">
        <map:generate src="../../{global:gdir}{global:ldir}inbox/manifest_{1}_{2}_{3}.xml" />
        <map:transform type="xslt-saxon" src="xsl/deleteTitles.xsl">
          <map:parameter name="dir" value="../../{global:gdir}{global:ldir}" />
          <map:parameter name="ts" value="{1}" />
          <map:parameter name="country" value="{2}" />
          <map:parameter name="locale" value="{3}" />
        </map:transform>
        <map:transform type="include" />
        <map:transform type="shell" />
        <map:transform type="xslt-saxon" src="xsl/cleanupDeletes.xsl" />
        <map:transform type="write-source" />
        <map:serialize type="xml" />
      </map:match>
      <!--
        {1} ts
        {2} country
        {3} locale
      -->
      <map:match pattern="delete.*.*.*">
        <map:act type="copy-source" src="cocoon:/deleteManifest/{3}">
          <map:parameter name="dest" value="../../{global:gdir}{global:ldir}outbox/manifest_{1}_{2}_{3}.xml" />
        </map:act>
        <map:generate src="../../{global:gdir}{global:ldir}outbox/manifest_{1}_{2}_{3}.xml" />
        <map:serialize type="xml" />
      </map:match>
  
      <!--
        {1} locale
      -->
      <map:match pattern="deleteManifest/*">
        <map:generate type="directory" src="../../{global:gdir}{global:ldir}cache">
          <map:parameter name="dateFormat" value="yyyy-MM-dd hh:mm" />
          <map:parameter name="depth" value="1" />
          <map:parameter name="include" value=".*{1}.*\.xml" />
        </map:generate>
        <map:transform type="xslt-saxon" src="xsl/dir2Delete.xsl">
          <map:parameter name="sourceDir" value="../../{global:gdir}{global:ldir}cache" />
        </map:transform>
        <map:transform type="include" />
        <!--map:transform type="shell"/-->
        <map:transform type="xslt-saxon" src="xsl/cleanupDeletes.xsl" />
        <map:serialize type="xml" />
      </map:match>
      <!-- -->
      <map:match pattern="deleteAssets/*">
        <map:generate src="../../{global:gdir}{global:ldir}cache/{1}" />
        <map:transform type="xslt-saxon" src="xsl/addDeletes.xsl" />
        <map:serialize type="xml" />
      </map:match>
      <!-- -->
      <map:match pattern="process/*/*">
        <map:act type="copy-source" src="cocoon:/processFile/{1}">
          <map:parameter name="dest" value="../../{global:gdir}{global:ldir}temp/{2}" />
        </map:act>
        <map:act type="copy-source" src="cocoon:/processFileAssets/{2}">
          <map:parameter name="dest" value="../../{global:gdir}{global:ldir}outbox/{2}" />
        </map:act>
        <map:generate src="xsl/empty.xml" />
        <map:serialize type="xml" />
      </map:match>
      <!--
        Removes titles that are identical to the cached title.
        For identical titles only the refid is kept, e.g. <matched ctn="26PDL4906H_12-HQ1-en_GB-001"/>
        
        {1} Manifest file created by "standard" product export.
      -->
      <map:match pattern="processFile/*">
        <map:generate src="../../{global:gdir}{global:ldir}outbox/{1}" />
        <map:transform type="xslt-saxon" src="xsl/includeCachedTitles.xsl">
          <map:parameter name="cache-folder" value="../../{global:gdir}{global:ldir}cache" />
        </map:transform>
        <map:transform type="include" />
        <map:transform type="xslt-saxon" src="xsl/compareContent.xsl" />
        <map:serialize type="xml" />
      </map:match>
      <!-- 
        Removes assets that were not modified.
        Reads physical files for the remaining assets.
        
        {1} Manifest file created by "standard" product export.
        
        Result is a valid manifest file.
      -->
      <map:match pattern="processFileAssets/*">
        <map:generate src="../../{global:gdir}{global:ldir}temp/{1}" />
        <map:transform type="xslt-saxon" src="xsl/includeCachedTitles.xsl">
          <map:parameter name="cache-folder" value="../../{global:gdir}{global:ldir}cache" />
        </map:transform>
        <map:transform type="include" />
        <map:transform type="xslt-saxon" src="xsl/compareAssets.xsl" />
        <map:transform type="xslt-saxon" src="xsl/stripAssets.xsl" />
        <map:transform type="xslt-saxon" src="xsl/createIncludeForAssetsRetrieval.xsl">
          <map:parameter name="ccrDir" value="{cmc2:ccrDir}" />
        </map:transform>
        <map:transform type="include" />
        <map:transform type="xslt-saxon" src="xsl/cleanup.xsl" />
        <map:serialize type="xml" />
      </map:match>
    <!-- -->
      <map:match pattern="readFile/**">
        <map:select type="resource-exists">
          <map:when test="{1}">
            <map:generate src="{1}" />
          </map:when>
          <map:otherwise>
            <!-- leave file it will be moved to cache during archive-->
            <map:generate src="xsl/empty.xml" />
          </map:otherwise>
        </map:select>
        <map:serialize type="xml" />
      </map:match>
    <!-- -->
      <map:match pattern="cacheTitles/**">
        <map:generate src="../../{global:gdir}{global:ldir}temp/{1}" />
        <map:transform type="xslt-saxon" src="xsl/writeTitles2Cache.xsl">
          <map:parameter name="cache-folder" value="../../{global:gdir}{global:ldir}cache" />
        </map:transform>
        <map:transform type="write-source" />
        <map:serialize type="xml" />
      </map:match>
     <!--
        Copy a resource to the outbox.
        
        {1} Resource URL
        
        Request params:
        targetName  Name of the file in the outbox
        mimeType    Mime type of the resource
      -->
      <map:match pattern="readResource/**">
        <!-- test if target resource exist -->
        <map:act type="copy-source" src="{1}" mime-type="{request-param:mimeType}">
          <map:parameter name="dest" value="../../{global:gdir}{global:ldir}outbox/{request-param:targetName}" />
        </map:act>
        <map:generate src="../../../common/xml/read.xml" />
        <map:serialize type="xml" />
      </map:match>
    <!-- -->
    </map:pipeline>
  </map:pipelines>
  <!-- -->
</map:sitemap>