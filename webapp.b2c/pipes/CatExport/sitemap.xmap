<?xml version="1.0"?>
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">
  <map:components>
    <map:transformers default="xslt">
      <map:transformer name="shell" src="org.apache.cocoon.transformation.FileActionsTransformer"/>
      <map:transformer name="romanization" src="org.apache.cocoon.transformation.RomanizationTransformer"/>
    </map:transformers>
    <map:actions>
      <map:action name="synced-copy-source" src="org.apache.cocoon.acting.SyncedCopySourceAction"/>
    </map:actions>
  </map:components>
  <!-- -->
  <map:resources>
    <map:resource name="sql">
      <map:transform type="sql">
        <map:parameter name="use-connection" value="oracleDbCMC"/>
        <map:parameter name="clob-encoding" value="UTF-8"/>
      </map:transform>
    </map:resource>
  </map:resources>
  <!-- -->

  <!--
    Export Categorizations.
    
    Pipeline parameters:
    
    fullexport: yes|no  If yes a full export is performed
    deltaTree:  y|n     If y the output data is compared with the last data that was sent and only modified data is exported.
    master:     yes|no  If yes master categorization is exported
    exportassignments: yes|no   If yes the export contains an additional file with the master categorization containing the assigned products for each node.
    outbox:     Path relative to the channel data directory in which the exported files should be stored.
                If empty a subdirectory inside the archive directory will be created based on the run timestamp.
                
    Overriding default transformations
    There are three transformation steps that can be overridden:
    1. formatCats.xsl   Creates the output XML format from the categorization database selection.
    2. delta.xsl        [TBD] Relevant only if deltaTree=y
    3. filter.xsl       [TBD] Relevant only if deltaTree=y
    
    Post processing
    If a sitemap exists in the PostProcess/{channel} folder a pipeline cocoon:/PostProcess/{channel}/run/{runtimestamp} 
    is called right before the archiveMain step.
  -->

  <map:pipelines>
    <map:pipeline name="{global:channel}" type="noncaching">
      <map:match pattern="runPipeline">
        <!-- This is the starting point of the pipeline. A lock is requested to prevent this pipeline from running multiple times in parallel.
        When a lock cannot be acquired, an error message is shown. If a lock can be acquired, run exportMain -->
        <map:act type="synced-copy-source" src="cocoon:/exportStart/{date:yyyyMMddHHmmss}">
          <map:parameter name="lockName" value="{global:channel}"/>
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/import.xml"/>
          <map:generate src="{global:gdir}{global:ldir}temp/import.xml"/>
          <map:serialize type="xml"/>
        </map:act>
        <map:generate src="../common/xml/locked.xml"/>
        <map:serialize type="xml"/>
      </map:match>
      <!--
        {1} timestamp 
      -->
      <map:match pattern="exportStart/*">
        <!-- Set Start Time.of this channel-->
        <map:act type="copy-source" src="cocoon:/runsql_setstarttime">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportSetStartTime.xml"/>
        </map:act>
        <!-- Clear out temp dir-->
        <map:act type="copy-source" src="cocoon:/deleteTempFiles">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportDeleteTmpFilesReport.xml"/>
        </map:act>
        <!-- Clear out outbox dir-->
        <map:act type="copy-source" src="cocoon:/deleteOutBox">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/deleteOutBox1.xml"/>
        </map:act>
        <!-- Call the main export -->
        <map:act type="copy-source" src="cocoon:/getCategorizationData">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/getCategorizationData.xml"/>
        </map:act>
        <map:select type="parameter">
          <map:parameter name="parameter-selector-test" value="{request-param:deltaTree}"/>
          <map:when test="y">
	        <map:act type="copy-source" src="cocoon:/deltaFiles">
              <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportDeltaFiles.xml"/>
            </map:act>
          </map:when>
        </map:select>
        <map:select type="resource-exists">
          <map:when test="PostProcess/{global:channel}/sitemap.xmap">
            <map:act type="copy-source" src="cocoon:/PostProcess/{global:channel}/run/{1}">
              <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportPostProcess.xml"/>
            </map:act>
          </map:when>
        </map:select>
        <map:act type="copy-source" src="cocoon:/archiveMain">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportArchiveMain.xml"/>
        </map:act>
        <!-- Update export timestamps -->
        <map:act type="copy-source" src="cocoon:/updateExportTimestamps">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportUpdateExportTimestamps.xml"/>
        </map:act>
        <!-- Create final report -->
        <map:act type="copy-source" src="cocoon:/createReport">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportCreateReport.xml"/>
        </map:act>
        <!-- Set End Time of this channel-->
        <map:act type="copy-source" src="cocoon:/runsql_setendtime">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportSetEndTime.xml"/>
        </map:act>
        <!-- Show result -->
        <map:act type="copy-source" src="cocoon:/runsql_gettimings">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportGetTimings.xml"/>
        </map:act>
        <map:generate src="{global:gdir}{global:ldir}temp/ReportGetTimings.xml"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- set Start / End Time -->
      <map:match pattern="runsql_*">
        <map:generate src="../common/xml/empty.xml"/>
        <map:transform type="xslt-saxon" src="../common/xsl/sql_{1}.xsl">
          <map:parameter name="channel" value="{global:channel}"/>
           <map:parameter name="run_id" value="{request-param:runId}"/>
           <map:parameter name="run_mode" value="{request-param:runmode}"/>
        </map:transform>
        <map:call resource="sql"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="archiveMain">	
        <!-- Archive  -->
		<map:generate src="../common/xml/empty.xml"/>
        <map:transform type="xslt-saxon" src="xsl/sql_getarchivedata.xsl">
          <map:parameter name="channel" value="{global:channel}"/>
        </map:transform>
        <map:call resource="sql"/>
        <map:transform type="xslt-saxon" src="xsl/include_archive.xsl"/>
        <map:transform type="include"/>
        <map:serialize type="xml"/>
      </map:match>
	  <!-- -->
	  <map:match pattern="getCategorizationData">
        <map:generate src="../common/xml/empty.xml"/>
        <map:transform src="xsl/sql_getLanguageCodes.xsl" label="step1">
          <map:parameter name="channel" value="{global:channel}"/>
        </map:transform>
        <map:call resource="sql"/>
        <map:transform type="xslt-saxon" src="xsl/ll2include.xsl" label="step3">
          <map:parameter name="master" value="{request-param:master}"/>
          <map:parameter name="exportassignments" value="{request-param:exportassignments}"/>
           <map:parameter name="exportCTN" value="{request-param:exportCTN}"/>
        </map:transform>
        <map:transform type="include" label="step4"/>
		<map:serialize type="xml"/>
	  </map:match>
      <!--
        {1} timestamp
        {2} locale or 'MASTER' 
      -->
      <map:match pattern="exportLocale.*.*">
        <!-- {1} timestamp {2} locale -->
        <!-- eg. http://localhost:8888/pipes/CatExport.ProfPMTCats/exportLocale.20100310T113414.de_DE?fullexport=yes  -->
        <map:act type="copy-source" src="cocoon:/selectCats.{2}">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportSelectCats_{2}.xml"/>
        </map:act>
        
        <map:select type="parameter">
          <map:parameter name="parameter-selector-test" value="{request-param:deltaTree}"/>
          <map:when test="y">
	        <map:act type="copy-source" src="cocoon:/exportCats.{1}.{2}">
				<map:parameter name="dest" value="{global:gdir}{global:ldir}temp/{global:channel}_Categorization_{1}_{2}.xml"/>
	        </map:act>
          </map:when>
          <map:otherwise>
            <map:act type="copy-source" src="cocoon:/exportCats.{1}.{2}">
              <map:parameter name="dest" value="{global:gdir}{global:ldir}outbox/{global:channel}_Categorization_{1}_{2}.xml"/>
            </map:act>
          </map:otherwise>
        </map:select>

        <map:generate src="../common/xml/empty.xml"/>
        <map:serialize type="xml"/>
      </map:match>
      <!--
        {1} locale (or 'MASTER')
      -->
      <map:match pattern="selectCats.*">
        <map:generate src="../common/xml/empty.xml"/>
        <map:transform type="xslt-saxon" src="xsl/sql_selectCats.xsl">
          <map:parameter name="locale" value="{1}"/>
          <map:parameter name="channel" value="{global:channel}"/>
          <map:parameter name="fullexport" value="{request-param:fullexport}"/>
          <map:parameter name="deltaTree" value="{request-param:deltaTree}"/>
        </map:transform>
        <map:call resource="sql"/>
        <map:serialize type="xml"/>
      </map:match>
      <!--
        {1} timestamp
        {2} locale (or 'MASTER')
      -->
      <map:match pattern="exportCats.*.*">
        <map:generate src="../common/xml/empty.xml"/>
        <map:transform type="xslt-saxon" src="xsl/sql_retrieveCats.xsl" label="step1">
          <map:parameter name="locale" value="{2}"/>
          <map:parameter name="channel" value="{global:channel}"/>
          <map:parameter name="exportassignments" value="{request-param:exportassignments}"/>
          <map:parameter name="deltaTree" value="{request-param:deltaTree}"/>
        </map:transform>
        <map:call resource="sql"/>  
        <map:select type="resource-exists">
          <map:when test="xsl/{global:channel}formatCats.xsl">
            <map:transform type="xslt-saxon" src="xsl/{global:channel}formatCats.xsl" label="step3">
              <map:parameter name="exportdate" value="{1}"/>
              <map:parameter name="locale" value="{2}"/>
              <map:parameter name="channel" value="{global:channel}"/>
            </map:transform>           
          </map:when>
          <map:otherwise>
             <map:transform type="xslt-saxon" src="xsl/formatCats.xsl" label="step3">
              <map:parameter name="exportdate" value="{1}"/>
              <map:parameter name="locale" value="{2}"/>
              <map:parameter name="channel" value="{global:channel}"/>
            </map:transform>
           </map:otherwise>
        </map:select>
		
		<map:select type="resource-exists">
          <map:when test="PostProcess/{global:channel}/xsl/sortingDuplicate.xsl">
          	<map:transform type="xslt-saxon" src="PostProcess/{global:channel}/xsl/sortingDuplicate.xsl"/>
          </map:when>
        </map:select>

		<map:select type="resource-exists">
          <map:when test="PostProcess/{global:channel}/xsl/removeDuplicate.xsl">
          	<map:transform type="xslt-saxon" src="PostProcess/{global:channel}/xsl/removeDuplicate.xsl"/>
          </map:when>
        </map:select> 


        <map:transform type="xslt-saxon" src="xsl/dot2dashConverter.xsl" />            
            
        <map:transform type="romanization"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="exportAssignments.*.*">
        <!-- {1} timestamp {2} locale -->
        <map:act type="copy-source" src="cocoon:/exportCats.{1}.{2}">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}outbox/{global:channel}_ProductCategorization_{1}_{2}.xml"/>
        </map:act>
        <map:generate src="../common/xml/empty.xml"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->      
      <map:match pattern="createReport">
        <map:generate src="../common/xml/empty.xml"/>
        <map:transform src="xsl/sql_genReport.xsl">
          <map:parameter name="channel" value="{global:channel}"/>
        </map:transform>
        <map:call resource="sql"/>
        <map:transform type="xslt-saxon" src="xsl/formatReport.xsl">
          <map:parameter name="channel" value="{global:channel}"/>
          <map:parameter name="dir" value="{global:gdir}{global:ldir}"/>
          </map:transform>
        <map:transform type="write-source"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <!--
        Archive files and create CONTENT-READY file
        {1} locale
        {2} archive subdir
      -->
      <map:match pattern="archive/*/**">
	  
        <map:act type="copy-source" src="cocoon:/archiveFiles/{1}/{2}">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportArchiveFiles.{1}.xml"/>
        </map:act>
        <map:act type="copy-source" src="cocoon:/createCONTENTREADY/{2}">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportCreateContentReady.{1}.xml"/>
        </map:act>
        <map:generate src="{global:gdir}{global:ldir}temp/ReportArchiveFiles.{1}.xml"/>
        <map:serialize type="xml"/>
      </map:match>
      
      <!--
        For one locale:
        - move relevant outbox files to archive subdirectory.
        - delete empty outbox files.
        
        {1} locale
        {2} target subdir
      -->
      <map:match pattern="archiveFiles/*/**">
        <map:generate type="xpathdirectory" src="{global:gdir}{global:ldir}outbox">
          <map:parameter name="xpath" value="/*"/>
          <map:parameter name="xmlFiles" value="Categorization.*\.xml"/>
          <map:parameter name="include" value="Categorization.*{1}\.xml"/>
        </map:generate>
        <map:select type="parameter">
          <map:parameter name="parameter-selector-test" value="{request-param:outbox}"/>
          <map:when test="">
            <map:transform type="xslt-saxon" src="xsl/dir2shell_archive.xsl">
              <map:parameter name="sourceDir" value="{global:gdir}{global:ldir}outbox"/>
              <map:parameter name="targetDir" value="{global:gdir}{global:ldir}archive/{2}"/>
              <map:parameter name="archiveFTPDir" value="{global:gdir}{global:ldir}archive_ftp"/>
              <map:parameter name="cacheDir" value="{global:gdir}{global:ldir}cache"/>
              <map:parameter name="fullExport" value="{request-param:fullexport}"/>
            </map:transform>
          </map:when>
          <map:otherwise>
            <map:transform type="xslt-saxon" src="xsl/dir2shell_archive.xsl">
              <map:parameter name="sourceDir" value="{global:gdir}{global:ldir}outbox"/>
              <map:parameter name="targetDir" value="{global:gdir}{global:ldir}{request-param:outbox}"/>
              <map:parameter name="archiveFTPDir" value="{global:gdir}{global:ldir}archive_ftp"/>
              <map:parameter name="cacheDir" value="{global:gdir}{global:ldir}cache"/>
              <map:parameter name="fullExport" value="{request-param:fullexport}"/>
            </map:transform>
          </map:otherwise>
        </map:select>
        <map:transform type="shell"/>
        <map:serialize type="xml"/>
      </map:match>

      <!--
        Create CONTENT-READY file in an archive subdirectory.
        {1} archive subdir
      -->
      <map:match pattern="createCONTENTREADY/**">
        <map:generate src="../common/xml/empty.xml"/>
        <map:select type="parameter">
          <map:parameter name="parameter-selector-test" value="{request-param:outbox}"/>
          <map:when test="">
            <map:act type="copy-source" src="../common/xml/empty.xml">
              <map:parameter name="dest" value="{global:gdir}{global:ldir}archive/{1}/CONTENT-READY"/>
            </map:act>
          </map:when>
          <map:otherwise>
            <map:act type="copy-source" src="../common/xml/empty.xml">
              <map:parameter name="dest" value="{global:gdir}{global:ldir}{request-param:outbox}/CONTENT-READY"/>
            </map:act>
          </map:otherwise>
        </map:select>
        <map:serialize type="xml"/>        
      </map:match>

	  <!--
        Perform a delta on the exported tree (in temp) with the latest export (in cache.)
      -->
      <map:match pattern="deltaFiles">
	  <!-- http://localhost:8888/pipes/CatExport.ProfPMTCats/deltaFiles?fullexport=yes -->
        <map:generate type="xpathdirectory" src="{global:gdir}{global:ldir}temp">
          <map:parameter name="xpath" value="/*"/>
          <map:parameter name="xmlFiles" value="Categorization.*\.xml"/>
          <map:parameter name="include" value="Categorization.*"/>
        </map:generate>
        <map:transform src="xsl/include_delta.xsl"/>
        <map:transform type="include"/>
        <map:serialize type="xml"/>
      </map:match>
      
      <!--
        {1} channel
        {2} content type ('Categorization')
        {3} timestamp 
        {4} locale + '.xml'

        E.g. http://localhost:8888/pipes/CatExport.ProfPMTCats/delta/ProfPMTCats_Categorization_20100310T113414_de_DE.xml?fullexport=no&deltaTree=y
      -->
      <map:match pattern="delta/*_*_*_**">
	    <!-- http://localhost:8888/pipes/CatExport.ProfPMTCats/delta/ProfPMTCats_Categorization_20100310T113414_de_DE.xml?fullexport=no&deltaTree=y -->
        <map:generate src="{global:gdir}{global:ldir}temp/{1}_{2}_{3}_{4}"/>
        <map:transform src="xsl/include_cachedFile.xsl">
          <map:parameter name="file" value="{global:gdir}{global:ldir}cache/{1}_{2}_{4}"/>
	     </map:transform>		
        <map:transform type="xinclude"/>
        <map:select type="resource-exists">
          <map:when test="xsl/{global:channel}delta.xsl">
            <map:transform type="xslt-saxon" src="xsl/{global:channel}delta.xsl"/>
          </map:when>
          <map:otherwise>
             <map:transform type="xslt-saxon" src="xsl/delta.xsl"/>
           </map:otherwise>
        </map:select>	
        <map:select type="resource-exists">
          <map:when test="xsl/{global:channel}filter.xsl">
            <map:transform type="xslt-saxon" src="xsl/{global:channel}filter.xsl"/>
          </map:when>
          <map:otherwise>
             <map:transform type="xslt-saxon" src="xsl/filter.xsl"/>
           </map:otherwise>
        </map:select>				
        <map:transform type="xslt-saxon" src="xsl/writer.xsl">
          <map:parameter name="fullexport" value="{request-param:fullexport}"/>
          <map:parameter name="dir" value="{global:gdir}{global:ldir}"/>
          <map:parameter name="channel" value="{1}"/>
          <map:parameter name="ct" value="{2}"/>
          <map:parameter name="ts" value="{3}"/>
          <map:parameter name="end" value="{4}"/>
        </map:transform>			
        <!-- Write delta file to outbox and new complete file to cache -->
        <map:transform type="write-source"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="updateExportTimestamps">
        <map:generate src="../common/xml/empty.xml"/>
        <map:transform src="xsl/sql_updateExportTimestamps.xsl" label="step1">
          <map:parameter name="exportdate" value="{1}"/>
          <map:parameter name="locale" value="{2}"/>
          <map:parameter name="channel" value="{global:channel}"/>
        </map:transform>
        <map:call resource="sql"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="deleteTempFiles">
        <map:generate type="directory" src="{global:gdir}{global:ldir}temp">
          <map:parameter name="dateFormat" value="yyyy-MM-dd HH:mm"/>
          <map:parameter name="depth" value="1"/>
          <map:parameter name="include" value=".*"/>
        </map:generate>
        <map:transform src="../common/xsl/dir2shell_delete.xsl">
          <map:parameter name="dir" value="{global:gdir}{global:ldir}temp"/>
        </map:transform>
        <map:transform type="shell" />
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="deleteOutBox">
        <map:generate type="directory" src="{global:gdir}{global:ldir}outbox">
          <map:parameter name="dateFormat" value="yyyy-MM-dd HH:mm"/>
          <map:parameter name="depth" value="1"/>
          <map:parameter name="include" value=".*"/>
        </map:generate>
        <map:transform src="../common/xsl/dir2shell_delete.xsl">
          <map:parameter name="dir" value="{global:gdir}{global:ldir}outbox"/>
        </map:transform>
        <map:transform type="shell"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- Mount any sub sitemaps -->
      <map:match pattern="*/**">
        <map:mount check-reload="yes" src="{1}/" uri-prefix="{1}"/>
      </map:match>
    </map:pipeline>
  </map:pipelines>
</map:sitemap>
