<?xml version="1.0"?>
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">
<!-- DB Configuration
     Note that this channel uses only a few Channel_catalogs-entries for configuration.
     26/11/2012: Added catalog ('CONSUMER' only) to the configuration.

SET DEFINE OFF;
Insert into CHANNELS 
   (ID, NAME, LOCALE, LOCATION, TYPE, PIPELINE, MACHINEAFFINITY, STARTEXEC, ENDEXEC, CATALOG) 
 Values   
   ('1200', 'CockpitReportExport', 'en_US', 'CockpitReportExport', 'export', 'pipes/CockpitReportExport', 'all()', null, null, 'DUMMY');    

Insert into CHANNEL_CATALOGS
   (CUSTOMER_ID, LOCALE, CATALOG_TYPE, DIVISION, BRAND, 
    PRODUCT_TYPE, ENABLED, LOCALEENABLED, MASTERLOCALEENABLED, PRIORITY_GROUP)
 Values
   ('1200', 'no_NO', 'CONSUMER', 'DUMMY', 'ALL', 
    'NORMAL', 1, 0, 0, 0);
Insert into CHANNEL_CATALOGS
   (CUSTOMER_ID, LOCALE, CATALOG_TYPE, DIVISION, BRAND, 
    PRODUCT_TYPE, ENABLED, LOCALEENABLED, MASTERLOCALEENABLED, PRIORITY_GROUP)
 Values
   ('1200', 'pt_BR', 'CONSUMER', 'DUMMY', 'ALL', 
    'NORMAL', 1, 0, 0, 0);
Insert into CHANNEL_CATALOGS
   (CUSTOMER_ID, LOCALE, CATALOG_TYPE, DIVISION, BRAND, 
    PRODUCT_TYPE, ENABLED, LOCALEENABLED, MASTERLOCALEENABLED, PRIORITY_GROUP)
 Values
   ('1200', 'zh_CN', 'CONSUMER', 'DUMMY', 'ALL', 
    'NORMAL', 1, 0, 0, 0);
Insert into CHANNEL_CATALOGS
   (CUSTOMER_ID, LOCALE, CATALOG_TYPE, DIVISION, BRAND, 
    PRODUCT_TYPE, ENABLED, LOCALEENABLED, MASTERLOCALEENABLED, PRIORITY_GROUP)
 Values
   ('1200', 'fi_FI', 'CONSUMER', 'DUMMY', 'ALL', 
    'NORMAL', 1, 0, 0, 0);
Insert into CHANNEL_CATALOGS
   (CUSTOMER_ID, LOCALE, CATALOG_TYPE, DIVISION, BRAND, 
    PRODUCT_TYPE, ENABLED, LOCALEENABLED, MASTERLOCALEENABLED, PRIORITY_GROUP)
 Values
   ('1200', 'cs_CZ', 'CONSUMER', 'DUMMY', 'ALL', 
    'NORMAL', 1, 0, 0, 0);
Insert into CHANNEL_CATALOGS
   (CUSTOMER_ID, LOCALE, CATALOG_TYPE, DIVISION, BRAND, 
    PRODUCT_TYPE, ENABLED, LOCALEENABLED, MASTERLOCALEENABLED, PRIORITY_GROUP)
 Values
   ('1200', 'en_US', 'CONSUMER', 'DUMMY', 'ALL', 
    'NORMAL', 1, 0, 0, 0);
Insert into CHANNEL_CATALOGS
   (CUSTOMER_ID, LOCALE, CATALOG_TYPE, DIVISION, BRAND, 
    PRODUCT_TYPE, ENABLED, LOCALEENABLED, MASTERLOCALEENABLED, PRIORITY_GROUP)
 Values
   ('1200', 'en_GB', 'CONSUMER', 'DUMMY', 'ALL', 
    'NORMAL', 1, 0, 0, 0);
Insert into CHANNEL_CATALOGS
   (CUSTOMER_ID, LOCALE, CATALOG_TYPE, DIVISION, BRAND, 
    PRODUCT_TYPE, ENABLED, LOCALEENABLED, MASTERLOCALEENABLED, PRIORITY_GROUP)
 Values
   ('1200', 'de_DE', 'CONSUMER', 'DUMMY', 'ALL', 
    'NORMAL', 1, 0, 0, 0);
Insert into CHANNEL_CATALOGS
   (CUSTOMER_ID, LOCALE, CATALOG_TYPE, DIVISION, BRAND, 
    PRODUCT_TYPE, ENABLED, LOCALEENABLED, MASTERLOCALEENABLED, PRIORITY_GROUP)
 Values
   ('1200', 'fr_FR', 'CONSUMER', 'DUMMY', 'ALL', 
    'NORMAL', 1, 0, 0, 0);
Insert into CHANNEL_CATALOGS
   (CUSTOMER_ID, LOCALE, CATALOG_TYPE, DIVISION, BRAND, 
    PRODUCT_TYPE, ENABLED, LOCALEENABLED, MASTERLOCALEENABLED, PRIORITY_GROUP)
 Values
   ('1200', 'nl_NL', 'CONSUMER', 'DUMMY', 'ALL', 
    'NORMAL', 1, 0, 0, 0);
Insert into CHANNEL_CATALOGS
   (CUSTOMER_ID, LOCALE, CATALOG_TYPE, DIVISION, BRAND, 
    PRODUCT_TYPE, ENABLED, LOCALEENABLED, MASTERLOCALEENABLED, PRIORITY_GROUP)
 Values
   ('1200', 'sv_SE', 'CONSUMER', 'DUMMY', 'ALL', 
    'NORMAL', 1, 0, 0, 0);
Insert into CHANNEL_CATALOGS
   (CUSTOMER_ID, LOCALE, CATALOG_TYPE, DIVISION, BRAND, 
    PRODUCT_TYPE, ENABLED, LOCALEENABLED, MASTERLOCALEENABLED, PRIORITY_GROUP)
 Values
   ('1200', 'ru_RU', 'CONSUMER', 'DUMMY', 'ALL', 
    'NORMAL', 1, 0, 0, 0);
Insert into CHANNEL_CATALOGS
   (CUSTOMER_ID, LOCALE, CATALOG_TYPE, DIVISION, BRAND, 
    PRODUCT_TYPE, ENABLED, LOCALEENABLED, MASTERLOCALEENABLED, PRIORITY_GROUP)
 Values
   ('1200', 'it_IT', 'CONSUMER', 'DUMMY', 'ALL', 
    'NORMAL', 1, 0, 0, 0);
Insert into CHANNEL_CATALOGS
   (CUSTOMER_ID, LOCALE, CATALOG_TYPE, DIVISION, BRAND, 
    PRODUCT_TYPE, ENABLED, LOCALEENABLED, MASTERLOCALEENABLED, PRIORITY_GROUP)
 Values
   ('1200', 'es_ES', 'CONSUMER', 'DUMMY', 'ALL', 
    'NORMAL', 1, 0, 0, 0);
Insert into CHANNEL_CATALOGS
   (CUSTOMER_ID, LOCALE, CATALOG_TYPE, DIVISION, BRAND, 
    PRODUCT_TYPE, ENABLED, LOCALEENABLED, MASTERLOCALEENABLED, PRIORITY_GROUP)
 Values
   ('1200', 'nl_BE', 'CONSUMER', 'DUMMY', 'ALL', 
    'NORMAL', 1, 0, 0, 0);
Insert into CHANNEL_CATALOGS
   (CUSTOMER_ID, LOCALE, CATALOG_TYPE, DIVISION, BRAND, 
    PRODUCT_TYPE, ENABLED, LOCALEENABLED, MASTERLOCALEENABLED, PRIORITY_GROUP)
 Values
   ('1200', 'fr_BE', 'CONSUMER', 'DUMMY', 'ALL', 
    'NORMAL', 1, 0, 0, 0);
Insert into CHANNEL_CATALOGS
   (CUSTOMER_ID, LOCALE, CATALOG_TYPE, DIVISION, BRAND, 
    PRODUCT_TYPE, ENABLED, LOCALEENABLED, MASTERLOCALEENABLED, PRIORITY_GROUP)
 Values
   ('1200', 'da_DK', 'CONSUMER', 'DUMMY', 'ALL', 
    'NORMAL', 1, 0, 0, 0);
COMMIT;
  -->
  <!--- -->
  <map:components>
    <map:transformers default="xslt">
      <map:transformer name="shell" src="org.apache.cocoon.transformation.FileActionsTransformer"/>
    </map:transformers>
    <map:actions>
      <map:action name="synced-copy-source" src="org.apache.cocoon.acting.SyncedCopySourceAction"/>
    </map:actions>
  </map:components>
  <!--- -->
  <map:resources>
    <map:resource name="sql">
      <map:transform type="sql">
        <map:parameter name="use-connection" value="oracleDbCMC"/>
        <map:parameter name="clob-encoding" value="UTF-8"/>
      </map:transform>
    </map:resource>
  </map:resources>
  <!--- -->
  <map:pipelines>
    <!--- -->
    <map:component-configurations>
      <global-variables>
        <ldir>CockpitReportExport/</ldir>
        <channel>CockpitReportExport</channel>
      </global-variables>
    </map:component-configurations>

    <map:pipeline name="{global:channel}" type="noncaching">
      <!--- -->
      <map:match pattern="runPipeline">
        <!-- This is the starting point of the pipeline. A lock is requested to prevent this pipeline from running multiple times in parallel.
        When a lock cannot be acquired, an error message is shown. If a lock can be acquired, run exportMain -->
        <map:act type="synced-copy-source" src="cocoon:/exportStart">
          <map:parameter name="lockName" value="{global:channel}"/>
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/import.xml"/>
          <map:generate src="{global:gdir}{global:ldir}temp/import.xml"/>
          <map:serialize type="xml"/>
        </map:act>
        <map:generate src="../common/xml/locked.xml"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="exportStart">
        <!-- Set Start Time.of this channel-->
        <map:act type="copy-source" src="cocoon:/runsql_setstarttime">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportSetStartTime.xml"/>
        </map:act>
        <!-- Call the Main Export.-->
        <map:act type="copy-source" src="cocoon:/exportMain">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportExportMain.xml"/>
        </map:act>
        <!-- Zip outbox files to archive dir -->        
        <map:act type="copy-source" src="cocoon:/zipOutBox">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}archive/{global:channel}_{date:yyyyMMdd}T{date:HHmmss}.zip"/>
        </map:act>        
        <!-- Archive outbox files -->
        <map:act type="copy-source" src="cocoon:/archiveFiles">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportArchiveFiles.xml"/>
        </map:act>
        <!-- Set End Time of this channel-->
        <map:act type="copy-source" src="cocoon:/runsql_setendtime">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportSetEndTime.xml"/>
        </map:act>
        <!-- Show result -->
        <map:act type="copy-source" src="cocoon:/runsql_gettimings">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportGetTimings.xml"/>
        </map:act>
        <map:generate src="{global:gdir}{global:ldir}temp/ReportGetTimings.xml"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- set Start / End Time -->
      <map:match pattern="runsql_*">
        <map:generate src="../common/xml/empty.xml"/>
        <map:transform type="xslt-saxon" src="../common/xsl/sql_{1}.xsl">
          <map:parameter name="channel" value="{global:channel}"/>
           <map:parameter name="run_id" value="{request-param:runId}"/>
           <map:parameter name="run_mode" value="{request-param:runmode}"/>
        </map:transform>
        <map:call resource="sql"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="exportMain">
        <!-- Clean temp -->
        <map:act type="copy-source" src="cocoon:/deleteDirectoryContents.temp.1">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/deleteTempFilesReport.xml"/>
        </map:act>
        <!-- Clean outbox -->
        <map:act type="copy-source" src="cocoon:/deleteDirectoryContents.outbox.1">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/deleteOutboxFilesReport.xml"/>
        </map:act>
        <!-- Process locales-->
        <map:act type="copy-source" src="cocoon:/processLocales">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/processLocalesReport.xml"/>
        </map:act>        
        <map:generate src="{global:gdir}{global:ldir}temp/processLocalesReport.xml"/>
        <!-- Generate the logs report -->
        <map:transform type="xslt-saxon" src="xsl/makereport.xsl">
          <map:parameter name="channel" value="{global:channel}"/>
          <map:parameter name="dir" value="{global:gdir}{global:ldir}"/>
        </map:transform>
        <!-- Write report to disk -->
        <map:transform type="write-source"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="processLocales">      
        <map:generate src="../common/xml/empty.xml"/>
        <map:transform src="xsl/sql_getlocales.xsl">
          <map:parameter name="channel" value="{global:channel}"/>
        </map:transform>        
        <map:call resource="sql"/>
        <map:transform type="xslt-saxon" src="xsl/include.xsl"/>        
          <map:transform type="cinclude"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="processLocale.*">            
        <map:act type="copy-source" src="cocoon:/extractProductData.{1}">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/extractProductDataReport.{1}.xml"/>
        </map:act>      
        <!-- -->                 
        <map:act type="copy-source" src="cocoon:/extractAncillaryData.{1}">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/extractAncillaryDataReport.{1}.xml"/>
        </map:act>
        <!-- -->         
        <map:act type="copy-source" src="cocoon:/generateXLS.{1}">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/generateXLSReport.{1}.xml"/>
        </map:act>
        <!-- -->                 
        <map:aggregate element="reports">
          <!--map:part src="{global:gdir}{global:ldir}temp/extractProductDataReport.{1}.xml"/-->
          <map:part src="{global:gdir}{global:ldir}temp/extractAncillaryDataReport.{1}.xml"/>
          <map:part src="{global:gdir}{global:ldir}temp/generateXLSReport.{1}.xml"/>
        </map:aggregate>        
        <map:serialize type="xml"/>
      </map:match>      
      <!-- -->      
      <map:match pattern="extractProductData.*">
        <map:generate src="../common/xml/empty.xml"/>
        <map:transform src="xsl/sql_getproductdata.xsl">
          <map:parameter name="locale" value="{1}"/>
        </map:transform>
        <map:call resource="sql"/>                
        <map:transform type="xslt-saxon" src="xsl/filterproductdata.xsl"/>
        <map:serialize type="xml"/>
      </map:match>                
      <!-- -->      
      <map:match pattern="extractAncillaryData.*">
        <map:generate src="../common/xml/empty.xml"/>
        <map:transform src="xsl/sql_getancillarydata.xsl">
          <map:parameter name="locale" value="{1}"/>
        </map:transform>
        <map:call resource="sql"/> 
        <map:transform type="xslt-saxon" src="xsl/merge.xsl">
          <map:parameter name="productfile" value="../{global:gdir}{global:ldir}temp/extractProductDataReport.{1}.xml"/>
        </map:transform>
        <map:transform type="xslt-saxon" src="xsl/aggregate.xsl"/>
        <map:transform type="xslt-saxon" src="xsl/writesource.xsl">
          <map:parameter name="dir" value="{global:gdir}{global:ldir}temp/"/>
        </map:transform>        
        <map:transform type="write-source"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="generateXLS.*">
        <map:generate src="{global:gdir}{global:ldir}temp/extractAncillaryDataReport.{1}.xml"/>        
        <map:transform type="xslt-saxon" src="xsl/includefile.xsl"/>        
        <map:transform type="cinclude"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="includeFile.**">
        <map:act type="copy-source" src="cocoon:/createXLS.{1}">
          <map:parameter name="dest" value="{request-param:filename}"/>
        </map:act>
        <map:generate src="../common/xml/empty.xml"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="createXLS.**">
        <map:generate src="{1}"/>
        <map:transform type="xslt-saxon" src="xsl/createXLS.xsl"/>
        <map:serialize type="xml">
          <map:parameter name="encoding" value="UTF-8"/>
        </map:serialize>
      </map:match>
      <!-- -->
      <map:match pattern="updateTransmitTimestamp.*.*">
        <map:generate src="../common/xml/empty.xml"/>
        <map:transform src="xsl/sql_updatetransmitdate.xsl">
          <map:parameter name="exportdate" value="{1}"/>
          <map:parameter name="locale" value="{2}"/>
          <map:parameter name="channel" value="{global:channel}"/>
        </map:transform>
        <map:call resource="sql"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="archiveFiles">
        <!-- Archive all files in outbox -->
        <map:generate type="directory" src="{global:gdir}{global:ldir}outbox">
          <map:parameter name="dateFormat" value="yyyy-MM-dd hh:mm"/>
          <map:parameter name="depth" value="1"/>
          <map:parameter name="include" value=".*\.xls"/>
        </map:generate>
        <!-- Move files to archive -->
        <map:transform src="../common/xsl/dir2shell_move.xsl">
          <map:parameter name="sourceDir" value="{global:gdir}{global:ldir}outbox"/>
          <map:parameter name="targetDir" value="{global:gdir}{global:ldir}archive"/>
        </map:transform>
        <map:transform type="shell"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="zipOutBox">
        <map:generate type="directory" src="{global:gdir}{global:ldir}outbox">
          <map:parameter name="dateFormat" value="yyyy-MM-dd hh:mm"/>
          <map:parameter name="depth" value="1"/>
          <map:parameter name="include" value=".*\.xls"/>
        </map:generate>
        <map:transform type="xslt-saxon" src="../common/xsl/dir2zip.xsl">
          <map:parameter name="sourceDir" value="{global:gdir}{global:ldir}outbox/"/>
          <map:parameter name="zipDir" value=""/>
        </map:transform>
        <map:serialize type="zip"/>
      </map:match>
      <!-- -->            
      <map:match pattern="deleteDirectoryContents.*.*">
        <!-- Delete all files in {1} to a level of {2} -->
        <map:generate type="directory" src="{global:gdir}{global:ldir}{1}">
          <map:parameter name="dateFormat" value="yyyy-MM-dd HH:mm"/>
          <map:parameter name="depth" value="{2}"/>
          <map:parameter name="include" value=".*"/>
        </map:generate>
        <!-- Delete all files -->
        <map:transform src="../common/xsl/dir2shell_delete.xsl">
          <map:parameter name="dir" value="{global:gdir}{global:ldir}{1}"/>
        </map:transform>
        <map:transform type="shell"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
    </map:pipeline>
  </map:pipelines>
  <!-- -->
  <map:views>
    <map:view name="stepX" from-label="stepX">
      <map:serialize type="xml"/>
    </map:view>
  </map:views>
  <!-- -->
</map:sitemap>
