<?xml version="1.0"?>
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">
  <map:components>
    <map:transformers default="xslt">
      <map:transformer name="shell" src="org.apache.cocoon.transformation.FileActionsTransformer"/>
    </map:transformers>
    <map:actions>
      <map:action name="synced-copy-source" src="org.apache.cocoon.acting.SyncedCopySourceAction"/>
    </map:actions>
  </map:components>
  <map:pipelines>
    <!--- -->
    <map:component-configurations>
      <global-variables>
        <ldir>TestMDM/</ldir>
        <channel>TestMDM</channel>
      </global-variables>
    </map:component-configurations>
    <!-- -->
    <map:pipeline name="{global:channel}" type="noncaching">
      <!--- -->
      <map:match pattern="runPipeline">
        <!-- This is the starting point of the pipeline. A lock is requested to prevent this pipeline from running multiple times in parallel.
				When a lock cannot be acquired, an error message is shown. If a lock can be acquired, run exportMain -->
        <map:act type="synced-copy-source" src="cocoon:/exportStart">
          <map:parameter name="lockName" value="{global:channel}"/>
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/import.xml"/>
          <map:generate src="{global:gdir}{global:ldir}temp/import.xml"/>
          <map:serialize type="xml"/>
        </map:act>
        <map:generate src="../common/xml/locked.xml"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="exportStart">
        <!-- Delete all files in the {global:gdir}{global:ldir}temp directory. Write the results of this action to a report.-->
        <map:act type="copy-source" src="cocoon:/deleteTempFiles">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportDeleteTmpFilesReport.xml"/>
        </map:act>
        <!-- Clear out outbox dir-->
        <map:act type="copy-source" src="cocoon:/deleteOutBox">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/deleteOutBox1.xml"/>
        </map:act>
        <!-- Set Start Time.of this channel-->
        <map:act type="copy-source" src="cocoon:/runsql_setstarttime">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportSetStartTime.xml"/>
        </map:act>
        <!-- Call the Main Master Export.-->
        <map:act type="copy-source" src="cocoon:/exportMainMaster">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportExportMainMaster.xml"/>
        </map:act>
        <!-- Call the Main Locale Export.-->
        <!--map:act type="copy-source" src="cocoon:/exportMainLocale">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportExportMainLocale.xml"/>
        </map:act-->
        <!-- -->
        <map:act type="copy-source" src="cocoon:/archiveFiles">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ArchiveFiles.xml"/>
        </map:act>
        <!-- Move inbox content to archive-->
        <!--map:act type="copy-source" src="cocoon:/archiveInboxFiles">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ArchiveInboxFiles.xml"/>
        </map:act-->
        <!-- Remove Zipped files-->
        <map:act type="copy-source" src="cocoon:/deleteOutBox">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/deleteOutBox2.xml"/>
        </map:act>
        <!-- Set End Time of this channel-->
        <map:act type="copy-source" src="cocoon:/runsql_setendtime">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportSetEndTime.xml"/>
        </map:act>
        <!-- Show result -->
        <map:act type="copy-source" src="cocoon:/runsql_gettimings">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportGetTimings.xml"/>
        </map:act>
        <map:generate src="{global:gdir}{global:ldir}temp/ReportGetTimings.xml"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- set Start / End Time -->
      <map:match pattern="runsql_*">
        <map:generate src="../common/xml/empty.xml"/>
        <map:transform type="xslt-saxon" src="../common/xsl/{global:db}sql_{1}.xsl">
          <map:parameter name="channel" value="{global:channel}"/>
           <map:parameter name="run_id" value="{request-param:runId}"/>
           <map:parameter name="run_mode" value="{request-param:runmode}"/>
        </map:transform>
        <!-- Run db queries -->
        <map:transform type="sql">
          <map:parameter name="use-connection" value="oracleDbCMC"/>
          <map:parameter name="clob-encoding" value="UTF-8"/>
        </map:transform>
        <!-- -->
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="exportMainMaster">
        <!-- loop over all languages -->
        <map:generate src="../common/xml/empty.xml" label="step1"/>
        <!-- transform output to get include statemanets to exportSubMaster-->
        <map:transform type="xslt-saxon" src="xsl/master2include.xsl" label="step2"/>
        <!-- excecute the includes-->
        <map:transform type="cinclude" label="step3"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="exportSubMaster.*.*.*">
        <!-- export per locale -->
        <map:act type="copy-source" src="cocoon:/selectMasterExportProducts.{1}.{2}.{3}">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportSelectMasterExportProducts_{1}_{2}_{3}.xml"/>
        </map:act>
        <!-- extract master files -->
        <map:act type="copy-source" src="cocoon:/exportMaster.{1}.{2}.{3}">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/PhilipsCatalog_{1}_{2}_source.xml"/>
        </map:act>
        <!-- extract master files -->
        <map:act type="copy-source" src="cocoon:/exportMarketingMaster.{1}.{2}.{3}">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}outbox/MarketingMaster_{1}_{2}.xml"/>
        </map:act>
        <map:act type="copy-source" src="cocoon:/exportLogisticsMaster.{1}.{2}.{3}">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}outbox/LogisticsMaster_{1}_{2}.xml"/>
        </map:act>
        <!-- extract master files -->
        <map:act type="copy-source" src="cocoon:/exportMarketingData.{1}.{2}.{3}">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}outbox/MarketingData_{1}_{2}.xml"/>
        </map:act>
        <map:act type="copy-source" src="cocoon:/exportLogisticsData.{1}.{2}.{3}">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}outbox/LogisticsData_{1}_{2}.xml"/>
        </map:act>
        <map:act type="copy-source" src="cocoon:/exportMarketingKeyValuePairs.{1}.{2}.{3}">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}outbox/MarketingKeyValue_{1}_{2}.xml"/>
        </map:act>
        <map:act type="copy-source" src="cocoon:/exportLogisticsKeyValuePairs.{1}.{2}.{3}">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}outbox/LogisticsKeyValue_{1}_{2}.xml"/>
        </map:act>
        <map:act type="copy-source" src="cocoon:/exportMarketingMilestoneMaster.{1}.{2}.{3}">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}outbox/MarketingMilestone_{1}_{2}.xml"/>
        </map:act>
        <map:act type="copy-source" src="cocoon:/exportDAP_MarketingCatalog">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}outbox/MarketingCatalog_{1}_DAP.xml"/>
        </map:act>
        <map:act type="copy-source" src="cocoon:/exportCE_MarketingCatalog">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}outbox/MarketingCatalog_{1}_CE.xml"/>
        </map:act>
        <map:act type="copy-source" src="cocoon:/exportCE_MarketingMilestone">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}outbox/MarketingMilestone_{1}_CE.xml"/>
        </map:act>
		<!-- -->
        <map:generate src="{global:gdir}{global:ldir}temp/ReportSelectMasterExportProducts_{1}_{2}_{3}.xml"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="exportMainLocale">
        <!-- loop over all languages -->
        <map:generate src="../common/xml/empty.xml"/>
        <map:transform src="xsl/{global:db}sql_getlocales.xslt" label="step1">
          <map:parameter name="channel" value="{global:channel}"/>
        </map:transform>
        <!-- Run db queries -->
        <map:transform type="sql" label="step2">
          <map:parameter name="use-connection" value="oracleDbCMC"/>
          <map:parameter name="clob-encoding" value="UTF-8"/>
        </map:transform>
        <!-- transform output to get include statemanets to exportSub-->
        <map:transform type="xslt-saxon" src="xsl/ll2include.xsl" label="step3"/>
        <!-- excecute the includes-->
        <map:transform type="cinclude" label="step4"/>
        <!-- generate report -->
        <map:transform type="xslt-saxon" src="../common/xsl/makereport.xsl" label="step5">
          <map:parameter name="channel" value="{global:channel}"/>
          <map:parameter name="dir" value="{global:gdir}{global:ldir}"/>
          <map:parameter name="exportdate" value="{date:yyyyMMdd}T{date:hhmmss}"/>
        </map:transform>
        <!-- write to disk -->
        <map:transform type="write-source" label="step6"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="exportSub.*.*.*">
        <!-- export per locale -->
        <map:act type="copy-source" src="cocoon:/selectExportProducts.{1}.{2}.{3}">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportSelectExportProducts_{1}.xml"/>
        </map:act>
        <!-- extract locale files-->
        <map:act type="copy-source" src="cocoon:/exportLocaleFiles.{1}.{2}.{3}">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/PhilipsCatalog_{1}_{2}_{3}.xml"/>
        </map:act>
        <!-- -->
        <map:act type="copy-source" src="cocoon:/exportMarketingAssets.{1}.{2}.{3}">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}outbox/MarketingAssets_{1}_{2}_{3}.xml"/>
        </map:act>
        <!-- -->
        <map:act type="copy-source" src="cocoon:/exportLogisticsAssets.{1}.{2}.{3}">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}outbox/LogisticsAssets_{1}_{2}_{3}.xml"/>
        </map:act>
        <!-- -->
        <map:act type="copy-source" src="cocoon:/genReport.{1}.{2}.{3}">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/FinalReport_{1}_{2}_{3}.xml"/>
        </map:act>
        <!-- -->
        <map:act type="copy-source" src="cocoon:/updateExportDate.{1}.{2}.{3}">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportUpdateExportDate_{1}_{2}_{3}.xml"/>
        </map:act>
        <map:generate src="{global:gdir}{global:ldir}temp/FinalReport_{1}_{2}_{3}.xml"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="selectMasterExportProducts.*.*.*">
        <map:select type="resource-exists">
          <map:when test="{global:gdir}{global:ldir}inbox/catalog.xml" label="step1">
            <map:generate src="{global:gdir}{global:ldir}inbox/catalog.xml"/>
            <map:transform type="xslt-saxon" src="xsl/{global:db}sql_catselectproducts.xsl" label="step2">
              <map:parameter name="exportdate" value="{1}"/>
              <map:parameter name="country" value="{2}"/>
              <map:parameter name="locale" value="{3}"/>
              <map:parameter name="channel" value="{global:channel}"/>
            </map:transform>
          </map:when>
          <map:otherwise>
            <map:generate src="../common/xml/empty.xml" label="step1"/>
            <map:transform type="xslt-saxon" src="xsl/{global:db}sql_selectmasterproducts.xsl" label="step2">
              <map:parameter name="exportdate" value="{1}"/>
              <map:parameter name="country" value="{2}"/>
              <map:parameter name="locale" value="{3}"/>
              <map:parameter name="channel" value="{global:channel}"/>
            </map:transform>
          </map:otherwise>
        </map:select>
        <!-- Run db queries -->
        <map:transform type="sql" label="step3">
          <map:parameter name="use-connection" value="oracleDbCMC"/>
          <map:parameter name="clob-encoding" value="UTF-8"/>
        </map:transform>
        <!-- -->
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="selectExportProducts.*.*.*">
        <map:select type="resource-exists">
          <map:when test="{global:gdir}{global:ldir}inbox/catalog.xml" label="step1">
            <map:generate src="{global:gdir}{global:ldir}inbox/catalog.xml"/>
            <map:transform type="xslt-saxon" src="xsl/{global:db}sql_catselectproducts.xsl" label="step2">
              <map:parameter name="exportdate" value="{1}"/>
              <map:parameter name="country" value="{2}"/>
              <map:parameter name="locale" value="{3}"/>
              <map:parameter name="channel" value="{global:channel}"/>
            </map:transform>
          </map:when>
          <map:otherwise>
            <map:generate src="../common/xml/empty.xml" label="step1"/>
            <map:transform type="xslt-saxon" src="xsl/{global:db}sql_selectproducts.xsl" label="step2">
              <map:parameter name="exportdate" value="{1}"/>
              <map:parameter name="country" value="{2}"/>
              <map:parameter name="locale" value="{3}"/>
              <map:parameter name="channel" value="{global:channel}"/>
            </map:transform>
          </map:otherwise>
        </map:select>
        <!-- Run db queries -->
        <map:transform type="sql" label="step3">
          <map:parameter name="use-connection" value="oracleDbCMC"/>
          <map:parameter name="clob-encoding" value="UTF-8"/>
        </map:transform>
        <!-- -->
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="exportMaster.*.*.*">
        <map:generate src="../common/xml/empty.xml"/>
        <map:transform type="xslt-saxon" src="xsl/{global:db}sql_getmasterproducts.xsl" label="step1">
          <map:parameter name="exportdate" value="{1}"/>
          <map:parameter name="country" value="{2}"/>
          <map:parameter name="locale" value="{3}"/>
          <map:parameter name="channel" value="{global:channel}"/>
        </map:transform>
        <!-- Run db queries -->
        <map:transform type="sql" label="step2">
          <map:parameter name="use-connection" value="oracleDbCMC"/>
          <map:parameter name="clob-encoding" value="UTF-8"/>
        </map:transform>
        <!-- transform output-->
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="exportMarketingMaster.*.*.*">
        <map:generate src="{global:gdir}{global:ldir}temp/PhilipsCatalog_{1}_{2}_source.xml"/>
        <!-- transform output-->
        <map:transform type="stx" src="xsl/xUCDM_split_batch.stx" label="step1">
          <map:parameter name="xslt" value="convertMarketingMaster.xsl"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="exportLogisticsMaster.*.*.*">
        <map:generate src="{global:gdir}{global:ldir}temp/PhilipsCatalog_{1}_{2}_source.xml"/>
        <!-- transform output-->
        <map:transform type="stx" src="xsl/xUCDM_split_batch.stx" label="step1">
          <map:parameter name="xslt" value="convertLogisticsMaster.xsl"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="exportMarketingData.*.*.*">
        <map:generate src="{global:gdir}{global:ldir}temp/PhilipsCatalog_{1}_{2}_source.xml"/>
        <!-- transform output-->
        <map:transform type="stx" src="xsl/xUCDM_split_batch.stx" label="step1">
          <map:parameter name="xslt" value="convertMarketingData.xsl"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="exportLogisticsData.*.*.*">
        <map:generate src="{global:gdir}{global:ldir}temp/PhilipsCatalog_{1}_{2}_source.xml"/>
        <!-- transform output-->
        <map:transform type="stx" src="xsl/xUCDM_split_batch.stx" label="step1">
          <map:parameter name="xslt" value="convertLogisticsData.xsl"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="exportMarketingKeyValuePairs.*.*.*">
        <map:generate src="{global:gdir}{global:ldir}temp/PhilipsCatalog_{1}_{2}_source.xml"/>
        <!-- transform output-->
        <map:transform type="stx" src="xsl/xUCDM_split_batch.stx" label="step1">
          <map:parameter name="xslt" value="convertMarketingKeyValuePairs.xsl"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="exportLogisticsKeyValuePairs.*.*.*">
        <map:generate src="{global:gdir}{global:ldir}temp/PhilipsCatalog_{1}_{2}_source.xml"/>
        <!-- transform output-->
        <map:transform type="stx" src="xsl/xUCDM_split_batch.stx" label="step1">
          <map:parameter name="xslt" value="convertLogisticsKeyValuePairs.xsl"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="exportMarketingMilestoneMaster.*.*.*">
        <map:generate src="{global:gdir}{global:ldir}temp/PhilipsCatalog_{1}_{2}_source.xml"/>
        <!-- transform output-->
        <map:transform type="stx" src="xsl/xUCDM_split_batch.stx" label="step1">
          <map:parameter name="xslt" value="convertMarketingMilestoneMaster.xsl"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="exportDAP_MarketingCatalog">
        <map:generate src="{global:gdir}{global:ldir}inbox/DAP_MarketingCatalog.xml"/>
        <!-- transform output-->
        <map:transform type="xslt-saxon" src="xsl/convertMarketingCatalog.xsl"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="exportCE_MarketingCatalog">
        <map:generate src="{global:gdir}{global:ldir}inbox/CE_MarketingCatalog.xml"/>
        <!-- transform output-->
        <map:transform type="xslt-saxon" src="xsl/convertMarketingCatalog.xsl"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="exportCE_MarketingMilestone">
        <map:generate src="{global:gdir}{global:ldir}inbox/CE_MarketingCatalog.xml"/>
        <!-- transform output-->
        <map:transform type="xslt-saxon" src="xsl/convertMarketingMilestone.xsl"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="testMaster_*">
        <map:generate src="xsl/testMasterProduct.xml"/>
        <map:transform type="stx" src="xsl/xUCDM_split_batch.stx" label="step1">
          <map:parameter name="xslt" value="convert{1}.xsl"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="exportLocaleFiles.*.*.*">
        <map:generate src="../common/xml/empty.xml"/>
        <map:transform type="xslt-saxon" src="xsl/{global:db}sql_getlocaleproducts.xsl" label="step1">
          <map:parameter name="exportdate" value="{1}"/>
          <map:parameter name="country" value="{2}"/>
          <map:parameter name="locale" value="{3}"/>
          <map:parameter name="channel" value="{global:channel}"/>
        </map:transform>
        <!-- Run db queries -->
        <map:transform type="sql" label="step2">
          <map:parameter name="use-connection" value="oracleDbCMC"/>
          <map:parameter name="clob-encoding" value="UTF-8"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="exportMarketingAssets.*.*.*">
        <map:generate src="{global:gdir}{global:ldir}temp/PhilipsCatalog_{1}_{2}_{3}.xml"/>
        <!-- transform output-->
        <map:transform type="stx" src="xsl/xUCDM_split_batch.stx" label="step1">
          <map:parameter name="xslt" value="convertMarketingAssets.xsl"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="exportLogisticsAssets.*.*.*">
        <map:generate src="{global:gdir}{global:ldir}temp/PhilipsCatalog_{1}_{2}_{3}.xml"/>
        <!-- transform output-->
        <map:transform type="stx" src="xsl/xUCDM_split_batch.stx" label="step1">
          <map:parameter name="xslt" value="convertLogisticsAssets.xsl"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="testLocale_*">
        <map:generate src="xsl/testLocaleProduct.xml"/>
        <map:transform type="stx" src="xsl/xUCDM_split_batch.stx" label="step1">
          <map:parameter name="xslt" value="convert{1}.xsl"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
	  <map:match pattern="get_AG_doc_*_**">
        <map:generate src="{global:gdir}{global:ldir}inbox/{1}_ProductTree.xml"/>
        <map:transform type="xslt" src="xsl/extract_AG.xsl" label="step1">
          <map:parameter name="ctn" value="{2}"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="deleteOutBox">
        <!-- Delete all files the outbox directory except the zip file -->
        <map:generate type="directory" src="{global:gdir}{global:ldir}outbox">
          <map:parameter name="dateFormat" value="yyyy-MM-dd hh:mm"/>
          <map:parameter name="depth" value="1"/>
          <map:parameter name="include" value=".*"/>
        </map:generate>
        <!-- Delete all files -->
        <map:transform src="../common/xsl/dir2shell_delete.xsl">
          <map:parameter name="dir" value="{global:gdir}{global:ldir}outbox"/>
        </map:transform>
        <map:transform type="shell"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="deleteOutBox.*.*.*">
        <!-- Delete all files the outbox directory except the zip file -->
        <map:generate type="directory" src="{global:gdir}{global:ldir}outbox">
          <map:parameter name="dateFormat" value="yyyy-MM-dd hh:mm"/>
          <map:parameter name="depth" value="1"/>
          <map:parameter name="include" value=".*\.xml"/>
          <map:parameter name="exclude" value=".*\.*"/>
        </map:generate>
        <!-- Delete all files -->
        <map:transform src="../common/xsl/dir2shell_delete.xsl">
          <map:parameter name="dir" value="{global:gdir}{global:ldir}outbox"/>
        </map:transform>
        <map:transform type="shell"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="genReport.*.*.*">
        <map:generate src="../common/xml/empty.xml"/>
        <map:transform src="../common/xsl/sql_genreport.xsl">
          <map:parameter name="exportdate" value="{1}"/>
          <map:parameter name="country" value="{2}"/>
          <map:parameter name="locale" value="{3}"/>
          <map:parameter name="channel" value="{global:channel}"/>
        </map:transform>
        <!-- Run db queries -->
        <map:transform type="sql">
          <map:parameter name="use-connection" value="oracleDbCMC"/>
          <map:parameter name="clob-encoding" value="UTF-8"/>
        </map:transform>
        <!-- -->
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="updateExportDate.*.*.*">
        <map:generate src="../common/xml/empty.xml"/>
        <map:transform src="xsl/sql_updatetransmitdate.xsl">
          <map:parameter name="exportdate" value="{1}"/>
          <map:parameter name="country" value="{2}"/>
          <map:parameter name="locale" value="{3}"/>
          <map:parameter name="channel" value="{global:channel}"/>
        </map:transform>
        <!-- Run db queries -->
        <map:transform type="sql">
          <map:parameter name="use-connection" value="oracleDbCMC"/>
          <map:parameter name="clob-encoding" value="UTF-8"/>
        </map:transform>
        <!-- -->
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="archiveFiles">
        <!-- Archive all files in inbox -->
        <!-- Retrieve all files in inbox -->
        <map:generate type="directory" src="{global:gdir}{global:ldir}outbox">
          <map:parameter name="dateFormat" value="yyyy-MM-dd hh:mm"/>
          <map:parameter name="depth" value="1"/>
          <map:parameter name="include" value=".*\.*"/>
        </map:generate>
        <!-- Move files to archive -->
        <map:transform src="../common/xsl/dir2shell_move.xsl">
          <map:parameter name="sourceDir" value="{global:gdir}{global:ldir}outbox"/>
          <map:parameter name="targetDir" value="{global:gdir}{global:ldir}archive"/>
        </map:transform>
        <map:transform type="shell"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="deleteTempFiles">
        <!-- Delete all files in {global:gdir}{global:ldir}temp directory -->
        <!-- Retrieve all files in {global:gdir}{global:ldir}temp directory -->
        <map:generate type="directory" src="{global:gdir}{global:ldir}temp" label="step1">
          <map:parameter name="dateFormat" value="yyyy-MM-dd hh:mm"/>
          <map:parameter name="depth" value="1"/>
          <map:parameter name="include" value=".*"/>
        </map:generate>
        <!-- Delete all files -->
        <map:transform src="../common/xsl/dir2shell_delete.xsl" label="step2">
          <map:parameter name="dir" value="{global:gdir}{global:ldir}temp"/>
        </map:transform>
        <map:transform type="shell" label="step3"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="testPipeline">
        <map:act type="copy-source" src="cocoon:/restoreTestFiles">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/RestoreTestFilesReport.xml"/>
        </map:act>
        <!-- -->
        <map:act type="copy-source" src="cocoon:/runPipeline">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/runPipeline.xml"/>
        </map:act>
        <map:generate src="{global:gdir}{global:ldir}temp/runPipeline.xml"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="restoreTestFiles">
        <!-- Move files from testdata to inbox -->
        <!-- Retrieve all files in testdata -->
        <map:generate type="directory" src="{global:gdir}{global:ldir}testdata">
          <map:parameter name="dateFormat" value="yyyy-MM-dd hh:mm"/>
          <map:parameter name="depth" value="1"/>
          <map:parameter name="include" value=".*"/>
        </map:generate>
        <!-- Move files to inbox  -->
        <map:transform src="../common/xsl/dir2shell_move.xsl">
          <map:parameter name="sourceDir" value="{global:gdir}{global:ldir}testdata"/>
          <map:parameter name="targetDir" value="{global:gdir}{global:ldir}inbox"/>
        </map:transform>
        <map:transform type="shell"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="restoreArchiveFiles">
        <!-- Move files from archive to inbox -->
        <!-- Retrieve all files in archive -->
        <map:generate type="directory" src="{global:gdir}{global:ldir}archive">
          <map:parameter name="dateFormat" value="yyyy-MM-dd hh:mm"/>
          <map:parameter name="depth" value="1"/>
          <map:parameter name="include" value=".*"/>
        </map:generate>
        <!-- Move files to inbox  -->
        <map:transform src="../common/xsl/dir2shell_move.xsl">
          <map:parameter name="sourceDir" value="{global:gdir}{global:ldir}archive"/>
          <map:parameter name="targetDir" value="inbox"/>
        </map:transform>
        <map:transform type="shell"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="deleteArchiveFiles">
        <!-- Delete all files in {global:gdir}{global:ldir}temp directory -->
        <!-- Retrieve all files in {global:gdir}{global:ldir}temp directory -->
        <map:generate type="directory" src="{global:gdir}{global:ldir}archive">
          <map:parameter name="dateFormat" value="yyyy-MM-dd hh:mm"/>
          <map:parameter name="depth" value="1"/>
          <map:parameter name="include" value=".*"/>
        </map:generate>
        <!-- Delete all files -->
        <map:transform src="../common/xsl/dir2shell_delete.xsl">
          <map:parameter name="dir" value="{global:gdir}{global:ldir}archive"/>
        </map:transform>
        <map:transform type="shell"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="archiveInboxFiles">
        <!-- Archive all files in inbox -->
        <map:generate type="directory" src="{global:gdir}{global:ldir}inbox">
          <map:parameter name="dateFormat" value="yyyy-MM-dd hh:mm"/>
          <map:parameter name="depth" value="1"/>
          <map:parameter name="include" value=".*\.xml"/>
        </map:generate>
        <!-- Move files to archive -->
        <map:transform src="../common/xsl/dir2shell_move.xsl">
          <map:parameter name="sourceDir" value="{global:gdir}{global:ldir}inbox"/>
          <map:parameter name="targetDir" value="{global:gdir}{global:ldir}archive"/>
        </map:transform>
        <map:transform type="shell"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
    </map:pipeline>
  </map:pipelines>
  <!-- -->
  <map:views>
    <map:view name="step1" from-label="step1">
      <map:serialize type="xml"/>
    </map:view>
    <map:view name="step2" from-label="step2">
      <map:serialize type="xml"/>
    </map:view>
    <map:view name="step3" from-label="step3">
      <map:serialize type="xml"/>
    </map:view>
    <map:view name="step4" from-label="step4">
      <map:serialize type="xml"/>
    </map:view>
    <map:view name="step5" from-label="step5">
      <map:serialize type="xml"/>
    </map:view>
    <map:view name="step6" from-label="step6">
      <map:serialize type="xml"/>
    </map:view>
  </map:views>
  <!-- -->
</map:sitemap>
