<?xml version="1.0"?>
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">
  <map:resources>
    <!-- the sql resource provides a central place to edit database details -->
    <map:resource name="sql">
      <map:transform type="sql">
        <map:parameter name="use-connection" value="oracleDbCMC"/>
        <map:parameter name="clob-encoding" value="UTF-8"/>
      </map:transform>
    </map:resource>
  </map:resources>
  <!--- -->
  <map:components>
    <map:actions>
      <map:action name="synced-copy-source" src="org.apache.cocoon.acting.SyncedCopySourceAction"/>
    </map:actions>
  </map:components>
  <!--- -->
  <map:pipelines>
    <!--- -->
    <map:component-configurations>
      <global-variables>
        <ldir>IntegrityChecks/</ldir>
        <channel>IntegrityChecks</channel>
        <!--
          insert into CHANNELS (ID, NAME, LOCALE, LOCATION, TYPE, PIPELINE, MACHINEAFFINITY, STARTEXEC, ENDEXEC, CATALOG)
          Values ('778', 'IntegrityChecks', 'en_US', 'IntegrityChecks', 'export', 'pipes/IntegrityChecks', 'all()', NULL, NULL, 'CONSUMER');
          -->
      </global-variables>
    </map:component-configurations>
    <!--- -->
    <map:pipeline name="{global:channel}" type="noncaching">
      <!--- -->
      <map:match pattern="runPipeline">
        <!-- This is the starting point of the pipeline. A lock is requested to prevent this pipeline from running multiple times in parallel.
        When a lock cannot be acquired, an error message is shown. If a lock can be acquired, run exportMain -->
        <map:act type="synced-copy-source" src="cocoon:/run">
          <map:parameter name="lockName" value="{global:channel}"/>
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/import.xml"/>
          <map:generate src="{global:gdir}{global:ldir}temp/import.xml"/>
          <map:serialize type="xml"/>
        </map:act>
        <map:generate src="../common/xml/locked.xml"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="run">
        <!-- Set Start Time.of this channel-->
        <map:act type="copy-source" src="cocoon:/runsql_setstarttime">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportSetStartTime.xml"/>
        </map:act>
        <!-- Call the Main Export.-->
        <map:act type="copy-source" src="cocoon:/runMain">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportExportMain.xml"/>
        </map:act>
        <!-- Set End Time of this channel-->
        <map:act type="copy-source" src="cocoon:/runsql_setendtime">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportSetEndTime.xml"/>
        </map:act>
        <!-- Show result -->
        <map:act type="copy-source" src="cocoon:/runsql_gettimings">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportGetTimings.xml"/>
        </map:act>
        <map:generate src="{global:gdir}{global:ldir}temp/ReportGetTimings.xml"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- set Start / End Time -->
      <map:match pattern="runsql_*">
        <map:select type="parameter">
          <map:parameter name="parameter-selector-test" value="{1}"/>
          <map:when test="setendtime">
            <map:generate src="{global:gdir}{global:ldir}temp/ReportExportMain.xml"/>
            <map:transform type="xslt-saxon" src="xsl/sql_setendtime.xsl">
              <map:parameter name="channel" value="{global:channel}"/>
              <map:parameter name="result" value="{global:channel}"/>
            </map:transform>
          </map:when>
          <map:otherwise>
            <map:generate src="../common/xml/empty.xml"/>
            <map:transform type="xslt-saxon" src="../common/xsl/sql_{1}.xsl">
              <map:parameter name="channel" value="{global:channel}"/>
              <map:parameter name="run_id" value="{request-param:runId}"/>
              <map:parameter name="run_mode" value="{request-param:runmode}"/>
            </map:transform>
          </map:otherwise>
        </map:select>
        <map:call resource="sql"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="runMain">
        <!-- Delete all files in the {global:gdir}{global:ldir}temp directory. Write the results of this action to a report.-->
        <map:act type="copy-source" src="cocoon:/deleteTempFiles">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/ReportDeleteTmpFilesReport.xml"/>
        </map:act>
        <map:generate src="../common/xml/empty.xml"/>
        <!-- Retrieve list of integrity checks to perform -->
        <map:transform type="xslt-saxon" src="xsl/ll2include.xsl" label="step1"/>        
        <map:transform type="cinclude"/>
        <!--map:transform type="xslt-saxon" src="xsl/summarize.xsl" label="step1"/-->
        <!-- generate final report -->
        <map:transform type="xslt-saxon" src="xsl/makereport.xsl">
          <map:parameter name="channel" value="{global:channel}"/>
          <map:parameter name="dir" value="{global:gdir}{global:ldir}"/>
          <map:parameter name="exportdate" value="{date:yyyyMMdd}T{date:HHmmss}"/>
        </map:transform>
        <!-- write to disk -->
        <map:transform type="write-source"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="unCategorizedProducts_DerivedCat.*">
        <map:act type="copy-source" src="cocoon:/unCategorizedProducts_DerivedCatSub.{1}">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/unCategorizedProducts_DerivedCatReport.xml"/>
        </map:act>
        <map:generate src="{global:gdir}{global:ldir}temp/unCategorizedProducts_DerivedCatReport.xml"/>
        <map:transform type="xslt-saxon" src="xsl/formatUnCategorizedProducts_DerivedCatEmail.xsl">
          <map:parameter name="timestamp" value="{1}"/>
          <map:parameter name="server" value="{cmc2:cocoonServer}"/>
          <map:parameter name="sender" value="{cmc2:emailSender}"/>
          <map:parameter name="recipient" value="{cmc2:emailRecipient}"/>
        </map:transform>
        <map:transform type="sendmail"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="unCategorizedProducts_DerivedCatSub.*">
        <map:generate src="../common/xml/empty.xml"/>
        <map:transform type="xslt-saxon" src="xsl/sql_getDerivedCatalogCodes.xsl"/>
        <map:call resource="sql"/>
        <map:transform type="xslt-saxon" src="xsl/derivedCatalogCodes2include.xsl"/>
        <map:transform type="cinclude"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="unCategorizedProductsForCatalog.*.*">
        <map:generate src="../common/xml/empty.xml"/>
        <map:transform type="xslt-saxon" src="xsl/sql_unCategorizedProducts.xsl">
          <map:parameter name="catalog" value="{2}"/>
        </map:transform>        
        <map:call resource="sql"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="unCategorizedProducts_MasterCat.*">
        <map:act type="copy-source" src="cocoon:/unCategorizedProductsForCatalog.{1}.MASTER">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/unCategorizedProducts_MasterCatReport.xml"/>
        </map:act>
        <map:generate src="{global:gdir}{global:ldir}temp/unCategorizedProducts_MasterCatReport.xml"/>
        <map:transform type="xslt-saxon" src="xsl/formatUnCategorizedProducts_MasterCatEmail.xsl">
          <map:parameter name="timestamp" value="{1}"/>
          <map:parameter name="server" value="{cmc2:cocoonServer}"/>
          <map:parameter name="sender" value="{cmc2:emailSender}"/>
          <map:parameter name="recipient" value="{cmc2:emailRecipient}"/>
        </map:transform>
        <map:transform type="sendmail"/>
        <map:serialize type="xml"/>
      </map:match>      
      <!-- -->        
      <map:match pattern="octlStatusCheck.*">
        <map:act type="copy-source" src="cocoon:/octlStatusCheckSub.{1}">
          <map:parameter name="dest" value="{global:gdir}{global:ldir}temp/checkreport_octlStatusCheck.xml"/>
        </map:act>
        <map:generate src="{global:gdir}{global:ldir}temp/checkreport_octlStatusCheck.xml"/>        
        <map:transform type="xslt-saxon" src="xsl/formatOctlStatusEmail.xsl">
          <map:parameter name="timestamp" value="{1}"/>
          <map:parameter name="server" value="{cmc2:cocoonServer}"/>
          <map:parameter name="sender" value="{cmc2:emailSender}"/>
          <map:parameter name="recipient" value="{cmc2:emailRecipient}"/>
        </map:transform>
        <map:transform type="sendmail"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="octlStatusCheckSub.*">
        <map:generate src="../common/xml/empty.xml"/>
        <map:transform type="xslt-saxon" src="xsl/sql_octlStatusCheck.xsl">
          <map:parameter name="channel" value="{global:channel}"/>
        </map:transform>
        <map:call resource="sql"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="getDataForLocalisation.*.*">
        <map:generate src="../common/xml/empty.xml"/>
        <map:transform type="xslt-saxon" src="xsl/sql_octlStatusCheck.xsl"/>
        <map:call resource="sql"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="xPathDataForLocalisation.*.*">
        <map:generate type="xpathdirectory" src="{global:gdir}{global:ldir}temp" label="step1">
          <map:parameter name="xpath" value="/root/node()[local-name()='rowset']/node()[local-name()='row']/node()[local-name()='data']/Product[NamingString/Partner]"/>
          <map:parameter name="xmlFiles" value="^raw_data_.*\.xml"/>
          <map:parameter name="include" value="^raw_data_.*"/>
        </map:generate>
        <map:transform type="xslt-saxon" src="xsl/convert.xsl" label="stepA5">
          <map:parameter name="channel" value="{global:channel}"/>
          <map:parameter name="dir" value="{global:gdir}{global:ldir}"/>
          <map:parameter name="exportdate" value="{date:yyyyMMdd}T{date:hhmmss}"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="deleteTempFiles">
        <map:generate type="directory" src="{global:gdir}{global:ldir}temp">
          <map:parameter name="dateFormat" value="yyyy-MM-dd hh:mm"/>
          <map:parameter name="depth" value="3"/>
          <map:parameter name="include" value=".*"/>
        </map:generate>
        <map:transform src="xsl/dir2shell_delete.xsl">
          <map:parameter name="dir" value="{global:gdir}{global:ldir}temp"/>
          <map:parameter name="leaf" value="temp"/>
        </map:transform>
        <map:transform type="shell"/>
        <map:serialize type="xml"/>
      </map:match>
    </map:pipeline>
  </map:pipelines>
  <!-- -->
  <map:views>
    <map:view name="step1" from-label="step1">
      <map:serialize type="xml"/>
    </map:view>
  </map:views>
  <!-- -->
</map:sitemap>
