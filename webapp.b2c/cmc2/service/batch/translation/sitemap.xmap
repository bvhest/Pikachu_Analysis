<?xml version="1.0" encoding="UTF-8"?>
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">

    <!-- GLOBAL variables
          {cmc2:gdir}      This is the top level of the data directory struture. Each ct has its own "archive","inbox","outbox","temp" and "log" sub-directories
          {cmc2:xmlDir}    This is the directory containing common xml documents
          {cmc2:xslDir}    this directory contains "common" and "ct" specific xslt transform documents
    -->

  <map:resources>
    <!-- the sql resource provides a central place to edit database details -->
    <map:resource name="sql">
      <map:transform type="sql">
        <map:parameter name="use-connection" value="oracleDbCMC"/>
        <map:parameter name="clob-encoding" value="UTF-8"/>
      </map:transform>
    </map:resource>
  </map:resources>
  <!-- -->
  <map:pipelines>
    <map:pipeline type="noncaching">

     <!-- Group documents based on ct localisation then invoke batching pipelines to sub-divide documents into batches
        Input parameters: {1} = ct
                        , {2} = timestamp
        Output Document: Result of writing the report document to file
      -->
      <map:match pattern="createExportBatches/*/*">
        <!-- set flags for catalog.xml products -->
        <map:select type="parameter">
          <map:parameter name="parameter-selector-test" value="{request-param:runcatalogexport}"/>
          <map:when test="yes">
            <map:generate type="directory" src="{cmc2:gdir}/{1}/inbox">
              <map:parameter name="depth" value="1"/>
              <map:parameter name="include" value=".*catalog.*\.xml"/>
            </map:generate>
            <map:transform type="xslt-saxon" src="xsl/include_dir2flagcatalogproducts.xsl">
              <map:parameter name="ct" value="{1}"/>
              <map:parameter name="timestamp" value="{2}"/>
            </map:transform>
            <map:transform type="cinclude"/>
          </map:when>
          <map:otherwise>
            <map:generate src="{cmc2:xmlDir}/empty.xml"/>
          </map:otherwise>
        </map:select>
        <!-- get localisations for content Type-->
        <map:transform type="xslt-saxon" src="xsl/sql_getctl.xsl">
          <map:parameter name="ct" value="{1}"/>
          <map:parameter name="isdirect" value="0"/>
          <map:parameter name="runcatalogexport" value="{request-param:runcatalogexport}"/>
          <map:parameter name="phase2" value="{request-param:phase2}"/>
          <map:parameter name="workflow" value="{request-param:workflow}"/>
        </map:transform>
        <map:call resource="sql"/>
        <map:transform type="xslt-saxon" src="xsl/include_ctl2createBatches.xsl">
          <map:parameter name="timestamp" value="{2}"/>
        </map:transform>
         <!-- Execute the includes-->
        <map:transform type="cinclude"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <!-- flag catalog.xml products -->
      <map:match pattern="flagCatalogProducts/*/*">
        <map:generate src="{cmc2:gdir}/{1}/inbox/{2}"/>
        <map:transform type="xslt-saxon" src="xsl/sql_flagcatalogproducts.xsl">
          <map:parameter name="ct" value="{1}"/>
        </map:transform>
        <map:call resource="sql"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <!-- move catalog.xml file -->      
      <map:match pattern="archiveCatalogFile/*/*">
        <map:generate src="{cmc2:xmlDir}/empty.xml"/>
        <map:transform type="xslt-saxon" src="xsl/archiveCatalogFile.xsl">
          <map:parameter name="ct" value="{1}"/>        
          <map:parameter name="source" value="{cmc2:gdir}/{1}/inbox/{2}"/>
          <map:parameter name="target" value="{cmc2:gdir}/{1}/processed/{2}"/>
          <map:parameter name="archiveCatalogFile" value="{request-param:archiveCatalogFile}"/>
        </map:transform>
        <map:transform type="shell"/>        
        <map:serialize type="xml"/>
      </map:match>      
      <!-- -->            
      <!-- Create batches by updating batch_number in octl table to split processing into a more manageble size.
         Input parameters: {1} = ct 
                           {2} = l 
                           {3} = category
                           {4} = timestamp
         Output Document: Result of sql statements to update octl table with batch_numbers
      -->
      <map:match pattern="createExportBatches/*/*/*/*">
        <!-- Idenfity and batch octls, ordering on MASTERLASTMODIFIED DESC -->
        <map:generate src="{cmc2:xmlDir}/empty.xml"/>
        <map:transform type="xslt-saxon" src="xsl/sql_createbatches.xsl">
          <map:parameter name="batchsize" value="60"/>
          <map:parameter name="ct" value="{1}"/>
          <map:parameter name="l" value="{2}"/>
          <map:parameter name="category" value="{3}"/>
          <map:parameter name="timestamp" value="{4}"/>
          <!-- ctn and locale will only have a value in the case of a priority translation request -->
          <map:parameter name="ctn" value="{request-param:ctn}"/>
          <map:parameter name="locale" value="{request-param:locale}"/>
          <!-- runcatalogexport will only have a value in the case of a catalog.xml request -->
          <map:parameter name="runcatalogexport" value="{request-param:runcatalogexport}"/>
          <map:parameter name="workflow" value="{request-param:workflow}"/>
          <map:parameter name="phase2" value="{request-param:phase2}"/>
          <map:parameter name="run_id" value="{request-param:runId}"/>
          <map:parameter name="schedule_id" value="{request-param:schedule_id}"/>
        </map:transform>
        <map:call resource="sql"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <!--
        Called by: PMT_Translated/runMainExport, PText_Translated/runMainExport...
        Input parameters: {1} = ct  {2} = ts
        Output Document: Result of writing the report document to file
      -->
      <map:match pattern="processExportBatches/*/*">
        <map:generate src="{cmc2:xmlDir}/empty.xml"/>
        <map:transform type="xslt-saxon" src="xsl/sql_selectbatches.xsl">
          <map:parameter name="ct" value="{1}"/>
          <!-- priority, ctn and locale will only have a value in the case of a priority translation request -->
          <map:parameter name="priority" value="{request-param:priority}"/>
          <map:parameter name="ctn" value="{request-param:ctn}"/>
          <map:parameter name="locale" value="{request-param:locale}"/>
          <!-- runcatalogexport will only have a value in the case of a catalog.xml request -->
          <map:parameter name="runcatalogexport" value="{request-param:runcatalogexport}"/>
          <map:parameter name="workflow" value="{request-param:workflow}"/>
          <map:parameter name="phase2" value="{request-param:phase2}"/>
        </map:transform>
        <map:call resource="sql"/>
        <map:transform type="xslt-saxon" src="xsl/include_ctl2createEntryRecords.xsl">
          <map:parameter name="timestamp" value="{2}"/>
          <map:parameter name="isdirect" value="0"/>
          <map:parameter name="priority" value="{request-param:priority}"/>
          <!-- runcatalogexport will only have a value in the case of a catalog.xml request -->
          <map:parameter name="runcatalogexport" value="{request-param:runcatalogexport}"/>
          <map:parameter name="workflow" value="{request-param:workflow}"/>
          <map:parameter name="phase2" value="{request-param:phase2}"/>
        </map:transform>
        <map:transform type="cinclude"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <!--
           Called by: PMT_Translated/runMainDirectImport,PText_Translated/runMainDirectImport ...
           Parameters: {1} ct  
                       {2} ts 
                       {3} isdirect
         -->
      <map:match pattern="processDirectBatches/*/*/*">
        <map:generate src="{cmc2:xmlDir}/empty.xml"/>
        <map:transform type="xslt-saxon" src="xsl/sql_getdirectctl.xsl">
          <map:parameter name="ct" value="{1}"/>
          <map:parameter name="ts" value="{2}"/>
        </map:transform>
        <map:call resource="sql"/>
        <map:transform type="xslt-saxon" src="xsl/include_ctl2createEntryRecords.xsl">
          <map:parameter name="timestamp" value="{2}"/>
          <map:parameter name="isdirect" value="{3}"/>
        </map:transform>
        <map:transform type="cinclude"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- Used by DirectImport.  
           Parameters:  {1} content_type 
                        {2} localisation 
                        {3} division 
                        {4} timestamp  
         -->
      <map:match pattern="createEntryRecords/*/*/*/*">
        <map:generate src="{cmc2:xmlDir}/empty.xml"/>
        <map:transform type="xslt-saxon" src="xsl/sql_select_entry_records.xsl">
          <map:parameter name="ct" value="{1}"/>
          <map:parameter name="l" value="{2}"/>
          <map:parameter name="division" value="{3}"/>
          <map:parameter name="ts" value="{4}"/>
          <map:parameter name="batchnumber" value="1"/>
          <map:parameter name="isdirect" value="1"/>
          <map:parameter name="priority" value="{request-param:priority}"/>
          <map:parameter name="workflow" value="{request-param:workflow}"/>          
        </map:transform>
        <map:call resource="sql"/>
        <map:transform type="xslt-saxon" src="xsl/include_octl2process.xsl">
          <map:parameter name="ctURL" value="{cmc2:ctURL}/"/>
          <map:parameter name="ct" value="{1}"/>
          <map:parameter name="l" value="{2}"/>
          <map:parameter name="division" value="{3}"/>
          <map:parameter name="ts" value="{4}"/>
          <map:parameter name="isdirect" value="1"/>
        </map:transform>
        <map:transform type="cinclude"/>
        <map:transform src="{cmc2:xslDir}/common/cleanup-sql.xsl"/>
        <map:transform type="xslt-saxon" src="{cmc2:xslDir}/common/writeEntry.xsl">
          <map:parameter name="dir" value="{cmc2:gdir}/{1}"/>
        </map:transform>
        <map:transform type="write-source"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- Used by processExportBatches 
           Parameters:  {1} content_type 
                        {2} localisation 
                        {3} categorycode 
                        {4} timestamp 
                        {5} batch_number 
         -->
      <map:match pattern="createEntryRecords/*/*/*/*/*">
        <map:generate src="{cmc2:xmlDir}/empty.xml"/>
        <map:transform type="xslt-saxon" src="xsl/sql_select_entry_records.xsl">
          <map:parameter name="ct" value="{1}"/>
          <map:parameter name="l" value="{2}"/>
          <map:parameter name="category" value="{3}"/>
          <map:parameter name="ts" value="{4}"/>
          <map:parameter name="batchnumber" value="{5}"/>
          <map:parameter name="isdirect" value="0"/>
          <map:parameter name="dir" value="{cmc2:gdir}/{1}/outbox"/>
          <map:parameter name="priority" value="{request-param:priority}"/>
          <map:parameter name="runcatalogexport" value="{request-param:runcatalogexport}"/>
          <map:parameter name="phase2" value="{request-param:phase2}"/>
          <map:parameter name="workflow" value="{request-param:workflow}"/>
          <map:parameter name="seo" value="{request-param:seo}"/>
        </map:transform>
        <map:call resource="sql"/>

        <map:transform type="xslt-saxon" src="xsl/include_octl2process.xsl">
          <map:parameter name="ctURL" value="{cmc2:ctURL}/"/>
          <map:parameter name="ct" value="{1}"/>
          <map:parameter name="l" value="{2}"/>
          <map:parameter name="category" value="{3}"/>
          <map:parameter name="ts" value="{4}"/>
          <map:parameter name="batchnumber" value="{5}"/>
          <map:parameter name="isdirect" value="0"/>
          <map:parameter name="dir" value="{cmc2:gdir}/{1}/outbox"/>
        </map:transform>
        <map:transform type="cinclude"/>
        <map:transform src="{cmc2:xslDir}/common/cleanup-sql.xsl"/>
        <map:transform type="xslt-saxon" src="{cmc2:xslDir}/common/writeEntry.xsl">
          <map:parameter name="dir" value="{cmc2:gdir}/{1}"/>
          <map:parameter name="prefix" value="{3}_"/>
        </map:transform>
        <map:transform type="write-source"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <!-- this should come from the database -->
      <map:match pattern="categories">
        <map:generate src="{cmc2:svcURL}/common/get/Categorization/none/MASTER"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="processImportBatches/*/*">
        <!--Parameters:   {1} = content_type  {2} timestamp-->
        <map:generate type="directory" src="{cmc2:gdir}/{1}/inbox">
          <map:parameter name="depth" value="1"/>
          <map:parameter name="include" value=".*batch.*\.xml||Online_Products_*\.xml||Categorization_*\.xml||Packaging_*\.xml||Online_Ranges_*\.xml"/>
        </map:generate>
        <map:transform type="xslt-saxon" src="xsl/include_dir2createEntryRecords.xsl">
          <map:parameter name="ct" value="{1}"/>
          <map:parameter name="timestamp" value="{2}"/>
          <map:parameter name="excludeworkflow" value="{request-param:excludeworkflow}"/>
          <map:parameter name="includeworkflow" value="{request-param:includeworkflow}"/>
        </map:transform>
        <map:transform type="cinclude"/>
        <map:serialize type="xml"/>
      </map:match>
      <!--
         | Called by: PMT_Translated/runMainImport, PText_Translated/runMainImport, RangeText_Translated/runMainImport(?)
         | 
         | TEST: localhost:8888/cmc2/service/batch/translation/resetNeedsProcessingFlags/PMT_Translated/20121023120000/export/CL_CMC?priority=3&runexport=yes&schedule_id=711&workflow=CL_CMC&phase2=no      
         |-->
      <map:match pattern="resetNeedsProcessingFlags/*/*/*/*">
        <map:generate src="{cmc2:xmlDir}/empty.xml"/>
        <map:transform src="xsl/sql_resetNeedsProcessingFlags.xsl">
          <map:parameter name="ct" value="{1}"/>
          <map:parameter name="ts" value="{2}"/>
          <map:parameter name="process" value="{3}"/>
          <map:parameter name="workflow" value="{4}"/>
          <map:parameter name="phase2" value="{request-param:phase2}"/>
          <map:parameter name="xexporttype" value="{request-param:xexporttype}"/>
        </map:transform>
        <map:call resource="sql"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- 
         | Called by: PMT_Translated/runMainImport, PText_Translated/runMainImport, RangeText_Translated/runMainImport
         |
         | Parameters: {1} ct 
         |             {2} timestamp 
         |             {3} prefix {3} filename ...........................filetimestamp {5}locale {6}category {7}batch {8}subbatch {9}fileextension
         |
         | TEST: localhost:8888/cmc2/service/batch/translation/createEntryRecords/PText_Translated/20111109093042/Packaging_Flat_TV_plasma_LCD_CL_CMC.20111109135526.nl_NL.PP_42PFL9900_20111109093042.xml?prefix=Packaging_Flat_TV_plasma_LCD_CL_CMC&filetimestamp=20111109135526&locale=nl_NL&batch=PP_42PFL9900_20111109093042&subbatch=
         -->
      <map:match pattern="createEntryRecords/*/*/**">
        <map:generate src="{cmc2:gdir}/{1}/inbox/{3}"/>
        <map:transform type="xslt-saxon" src="xsl/expandLanguageFamilies.xsl">
          <map:parameter name="filename" value="{3}"/>
        </map:transform>
        <map:transform type="xslt-saxon" src="{cmc2:ctURL}/get_ct_file/{1}/xsl/create_entry_records.xsl">
          <map:parameter name="ct" value="{1}"/>
          <map:parameter name="ts" value="{2}"/>
          <map:parameter name="filename" value="{3}"/>
          <map:parameter name="dir" value="{cmc2:gdir}/{1}/inbox"/>
          <map:parameter name="batch" value="{request-param:batch}"/>
          <map:parameter name="subbatch" value="{request-param:subbatch}"/>
          <map:parameter name="locale" value="{request-param:locale}"/>
        </map:transform>
        <map:call resource="sql"/>
        <map:transform src="{cmc2:ctURL}/get_ct_file/{1}/xsl/reformatForImport.xsl"/>
        <map:transform type="xslt-saxon" src="xsl/preProcessFile.xsl"/>
        <map:transform type="xslt-saxon" src="xsl/validate.xsl">
          <map:parameter name="ct" value="{1}"/>
        </map:transform>
        <map:transform type="xslt-saxon" src="{cmc2:ctURL}/get_ct_file/{1}/xsl/writeEntry.xsl">
          <map:parameter name="dir" value="{cmc2:gdir}/{1}"/>
          <map:parameter name="prefix" value="im_{request-param:filetimestamp}_"/>
          <map:parameter name="subbatch" value="{request-param:subbatch}"/>
        </map:transform>
        <map:transform type="write-source"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
    </map:pipeline>
  </map:pipelines>
</map:sitemap>
