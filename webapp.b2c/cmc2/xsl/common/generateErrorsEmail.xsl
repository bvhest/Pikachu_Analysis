<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="2.0"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:cinclude="http://apache.org/cocoon/include/1.0"
  xmlns:dir="http://apache.org/cocoon/directory/2.0"
  xmlns:email="http://apache.org/cocoon/transformation/sendmail">

  <xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes"/>
  <xsl:param name="ct"/>
  <xsl:param name="timestamp"/>
  <xsl:param name="sender"/>
  <xsl:param name="server"/>
  <xsl:param name="recipient"/>
  <xsl:variable name="report" select="/"/>
  <!--  -->
  <xsl:template match="/">
    <root>
          <xsl:for-each select="sourceResult/source">
            <xsl:variable name="v_file" select="document(.)"/>
            <xsl:call-template name="generateErrorsMail">
              <xsl:with-param name="v_file" select="$v_file"/>
              <xsl:with-param name="s_file" select="."/>
            </xsl:call-template>
          </xsl:for-each>
    </root>
  </xsl:template>
  <!--  -->
  <xsl:template name="generateErrorsMail">
    <xsl:param name="v_file"/>
    <xsl:param name="s_file"/>
    <xsl:choose>
      <xsl:when test="($ct = 'PText_Translated' and $v_file/report/item/result[contains(.,'Failure')][not(contains(../remark,'No translated content'))]
                                                                                                     [not(contains(../remark,'Translations missing'))]
                                                                                                     [not(contains(../remark,'out-of-date'))]
                                                                                                     [not(contains(../remark,'No translated content'))])
                      or
                      ($ct = 'PMT_Translated' and $v_file/report/item/result[contains(.,'Failure')][not(contains(../remark,'out-of-date'))]
                                                                                                   [not(contains(../remark,'Translations missing'))]
                                                                                                   [not(contains(../remark,'Validated translations missing'))]
                                                                                                   [not(contains(../remark,'Non-validated translations missing'))]
                                                                                                   [not(contains(../remark,'No translated content'))]
                                                                                                   [not(contains(../remark,'Duplicate: Valid CL_QUERY already received'))]
                                                                                                   [not(contains(../remark,'Identical modification dates'))])
                      or
                      ($ct = ('PCT_Translated','PCT_Raw') and $v_file/report/item[contains(result,'Failure')][not(contains(remark,'More recent document exists'))]
                                                                                                             [not(contains(remark,'Identical octl exists'))]
                      )
                      or
                      (not($ct = ('PMT_Translated','PText_Translated','PCT_Translated','PCT_Raw')) and $v_file/report/item/result[contains(.,'Failure')])">
        <document>
          <email:sendmail>
            <email:from><xsl:value-of select="$sender"/></email:from>
            <email:to><xsl:value-of select="$recipient"/></email:to>
            <!--email:to><xsl:value-of select="'addanotherrecipienthere@philips.com'"/></email:to-->
            <email:subject><xsl:value-of select="concat('Warning: Errors in ', $ct,' job (instance:',substring-before(substring-after($server,'http://'),':'),') - autogenerated email sent at ',$timestamp,' by Pika Chu')"/></email:subject>
            <email:body mime-type="text/plain">
Errors were encountered during processing. See <xsl:value-of select="$s_file"/>.
================================================================================
Errors: <xsl:text>
</xsl:text><xsl:choose>
            <xsl:when test="$ct = 'PMT_Translated' or $ct = 'PText_Translated'">
                <xsl:for-each select="$v_file/report/item[contains(result,'Failure') or contains(result,'SQL Failure')]
                                                         [not(contains(remark,'out-of-date'))]
                                                         [not(contains(upper-case(remark),'TRANSLATIONS MISSING'))]
                                                         [not(contains(remark,'No translated content'))]
                                                         [not(contains(remark,'Identical modification dates'))]
                                                         [not(contains(remark,'Duplicate: Valid CL_QUERY already received'))]">
<xsl:for-each select="node()">
<xsl:text>          </xsl:text><xsl:value-of select="local-name()"/>:<xsl:value-of select="."/><xsl:text>
</xsl:text>
</xsl:for-each><xsl:text>
</xsl:text>
                </xsl:for-each>
            </xsl:when>
            <xsl:when test="$ct = ('PCT_Translated','PCT_Raw')">
                <xsl:for-each select="$v_file/report/item[contains(result,'Failure')][not(contains(remark,'More recent document exists'))]
                                                                                     [not(contains(remark,'Identical octl exists'))]">
<xsl:for-each select="node()">
<xsl:text>          </xsl:text><xsl:value-of select="local-name()"/>:<xsl:value-of select="."/><xsl:text>
</xsl:text>
</xsl:for-each><xsl:text>
</xsl:text>
                </xsl:for-each>
            </xsl:when>
            <xsl:otherwise>
                <xsl:for-each select="$v_file/report/item[contains(result,'Failure')]">
<xsl:for-each select="node()">
<xsl:text>          </xsl:text><xsl:value-of select="local-name()"/>:<xsl:value-of select="."/><xsl:text>
</xsl:text>
</xsl:for-each><xsl:text>
</xsl:text>
                </xsl:for-each>
            </xsl:otherwise>
        </xsl:choose>
</email:body>
          </email:sendmail>
        </document>
      </xsl:when>
      <xsl:otherwise>
        <xsl:copy-of select="$report"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
</xsl:stylesheet>
