<?xml version="1.0" encoding="UTF-8"?>
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">
  
  <map:resources>
    <!-- The sql resource provides a central place to edit database details -->
    <map:resource name="sql">
      <map:transform type="sql">
        <map:parameter name="use-connection" value="oracleDbCMC"/>
        <map:parameter name="clob-encoding" value="UTF-8"/>
      </map:transform>
    </map:resource>    
  </map:resources>
  <!-- -->
  <map:pipelines>
    <map:component-configurations>
      <global-variables>
        <ct>GreenData</ct>
        <locale>master_global</locale>
      </global-variables>
    </map:component-configurations>
  <!-- -->
    <map:pipeline type="noncaching">
      <!-- Here is the main pipeline that executes the batch processing. 
           In invoking the pipeline the execution timestamp is passed as a parameter along with ct.
           
           Input parameters: {1} = timestamp
           Output          : OCTL-entry for the GreenData
           
           Assumption:
           - this process runs after the AssetList content types, as this supplies this content type with the necessary data.
             (in addition, for proper processing the PMT_Raw should also have run as the next CT that will use the GreenData 
              is the PMT_Enriched).
           
           Process steps:
           - check AssetLists-table for modified GIM-doctype assets,
           - fetch modified GIM-doctype assets from CCR into inbox
           - create placeholders (alike FastLane-process)
           - batch modified GIM-doctype assets,
           - create/update GreenData-octl,
      -->
      <map:match pattern="runMain/*">                
           <!-- 
              | remove files from previous run from the temp- and inbox-directories.
              -->
         <map:act type="copy-source" src="{cmc2:svcURL}/common/delete_dir/{cmc2:gdir}/{global:ct}/temp?delete-root=false">
           <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/cleanTempDir_report.xml"/>
         </map:act>
         <map:act type="copy-source" src="{cmc2:svcURL}/common/delete_dir/{cmc2:gdir}/{global:ct}/inbox?delete-root=false">
           <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/cleanInboxDir_report.xml"/>
         </map:act>
           <!-- 
              | - check AssetLists-table for modified GIM-doctype assets,
              | - fetch modified GIM-doctype assets from CCR into inbox
              -->
         <map:act type="copy-source" src="cocoon:/selectModifiedGreenAssets/{global:ct}/{global:locale}">
           <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/retrieveGIMAssets_report.xml"/>
         </map:act>  

         <!-- 
            | - batch modified GIM-doctype assets,
            | - create/update GreenData-octl,
            -->
         <map:act type="copy-source" src="{cmc2:svcURL}/batch/import/createBatches/{global:ct}/{1}?sourcedir={cmc2:gdir}/{global:ct}/inbox">
           <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/createBatches_report.xml"/>
         </map:act>
         <map:act type="copy-source" src="{cmc2:svcURL}/store/deltaSave/batch/import/processBatches/{global:ct}/{1}?createPlaceholder=y">
           <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/processBatches_report.xml"/>
         </map:act>
           <!-- 
              | update the CLE-table with the imported GIM-assets so it can be used to select 
              | the modified GIM-assets in the first step of this process.
              -->
         <map:act type="copy-source" src="cocoon:/updateModifiedGreenAssets/{global:ct}/{global:locale}/{1}">
           <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/updateCLE_report.xml"/>
         </map:act>  
           <!-- 
              | move files from the inbox- to the processed directory.
              -->
         <map:act type="copy-source" src="cocoon:/archiveFiles">
           <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/archive_report.xml"/>
         </map:act>
           <!-- 
              | and finally generate a report.
              -->
         <map:aggregate element="report">
            <map:part src="{cmc2:gdir}/{global:ct}/temp/cleanTempDir_report.xml"/>
            <map:part src="{cmc2:gdir}/{global:ct}/temp/cleanInboxDir_report.xml"/>
            <map:part src="{cmc2:gdir}/{global:ct}/temp/retrieveGIMAssets_report.xml"/>
            <map:part src="{cmc2:gdir}/{global:ct}/temp/createBatches_report.xml"/>
            <map:part src="{cmc2:gdir}/{global:ct}/temp/processBatches_report.xml"/>
            <map:part src="{cmc2:gdir}/{global:ct}/temp/updateCLE_report.xml"/>
            <map:part src="{cmc2:gdir}/{global:ct}/temp/archive_report.xml"/>
         </map:aggregate>
        <map:serialize type="xml"/>  
      </map:match>
      
       <!--+
         | Parameters:
           | 1) localisation 
           | 2) timestamp 
           | 3) file 
           | 
           | Test: http://localhost:8888/cmc2/content_type/GreenData/process/none/20110823163000/56PFL9954H_12.xml
           +-->      
      <map:match pattern="process/*/*/**">
        <map:generate src="{cmc2:gdir}/{global:ct}/inbox/{3}"/>
        <map:transform type="xslt-saxon" src="xsl/sql_create_entry_records.xsl">
          <map:parameter name="ct" value="{global:ct}"/>
          <map:parameter name="l" value="{global:locale}"/>
          <map:parameter name="batchnumber" value="{1}"/>
          <map:parameter name="ts" value="{2}"/>
          <map:parameter name="dir" value="{cmc2:gdir}/{global:ct}/outbox"/>
          <map:parameter name="reload" value="{request-param:reload}"/>
        </map:transform>
        <map:call resource="sql"/>
        <!-- convert Cemafoor Asset-format into xUCDM sustainability marketing 1.0 format. -->
        <map:transform type="xslt-saxon" src="xsl/convertCemafoorAsset.xsl"/>
        <map:serialize type="xml"/>
      </map:match>

      <!--
         | selects the modified Green Product assets, 
         | retrieves the content from CCR and 
         | stores the asset in the CT-inbox.
         |
         | Parameters:
         | 1) content type
         | 2) locale        
         | 
         | Open issues:
         | 1) process step (most probably) can not handle large ammounts of modified assets as the include-transform is not batched,
         | 2) url is stored in the database, but lost after the cocoon sql-action (currently hard-coded for the test),
         |  
         | Test: http://localhost:8888/cmc2/content_type/GreenData/selectModifiedGreenAssets/GreenData/master_global
         +-->
      <map:match pattern="selectModifiedGreenAssets/*/*">
        <map:generate src="{cmc2:xmlDir}/empty.xml"/>
        <map:transform src="xsl/sql_select_entry_records.xsl">
          <map:parameter name="ct" value="{1}"/>
          <map:parameter name="locale" value="{2}"/>		  
        </map:transform>
        <map:call resource="sql"/>               
        <map:transform type="xslt-saxon" src="xsl/extractAssets.xsl">
          <map:parameter name="ccr_dir" value="{cmc2:ccrDir}"/>		  
		  <map:parameter name="content_type" value="{1}"/>
		  <map:parameter name="svcURL" value="{cmc2:svcURL}"/>		  
        </map:transform>
        <map:transform type="include"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- 
         | Parameters:
         | 1) filename (without extension)
         | 2) url
         | 
         | Request params:
         |   mime-type    MIME type if the source (application/xml)
         |   ctn          CTN of the product the GIM belongs to
         | 
         | Test: http://localhost:8888/cmc2/content_type/GreenData/download/56PFL9954H_12.xml/c:/work/cocoon-2.1.9/mprdata/GIM/56PFL9954H_12.xml?mimeType=application/XML
         +-->
      <map:match pattern="download/*/**">
        <!-- test if resource exist -->
        <map:select type="resource-exists">
          <map:when test="{2}">
            <map:act type="copy-source" src="cocoon:/readGIM/{2}" mime-type="{request-param:mime-type}">
              <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/inbox/{1}"/>
            </map:act>
            <map:generate src="{cmc2:xmlDir}/empty.xml"/>
            <map:transform type="xslt-saxon" src="xsl/read.xsl">
              <map:parameter name="target_filename" value="{1}"/>
              <map:parameter name="source_path" value="{2}"/>
            </map:transform>
          </map:when>
          <map:otherwise>
            <map:generate src="../../xml/notread.xml"/>
          </map:otherwise>
        </map:select>
        <map:serialize type="xml"/>
      </map:match>
      
      <!--
         | Replace the CTN inside the GIM with the actual CTN
         | Some assets in CCR are used by multiple products, e.g. 32PFL3605/12 and 32PFL3605/12B.
         | The GIM for these contain only one CommercialID, in this case 32PFL3605/12.
         | To successfully store the GIMs we need to replace the CommercialID inside with the actual CTN.
         | 
         | 1) full source path
         |
         | Request params:
         |   ctn    target CTN for the GIM
         -->
      <map:match pattern="readGIM/**">
        <map:generate src="{1}" />
        <map:transform src="xsl/fix_ctn.xsl">
          <map:parameter name="ctn" value="{request-param:ctn}" />
        </map:transform>
        <map:serialize type="xml" />
      </map:match>
      
      <!--
         | Update the import history records.
         | 
         | Parameters:
         | 1) content type
         | 2) locale
         | 3) timestamp
         | 
         | Test: http://localhost:8888/cmc2/content_type/GreenData/updateModifiedGreenAssets/GreenData/none/20110906163000
         +-->
      <map:match pattern="updateModifiedGreenAssets/*/*/*">
         <map:generate src="{cmc2:xmlDir}/empty.xml"/>
        <map:transform src="xsl/sql_update_CLE.xsl">
          <map:parameter name="ct" value="{1}"/>
          <map:parameter name="locale" value="{2}"/>
          <map:parameter name="ts" value="{3}"/>
        </map:transform>
        <map:call resource="sql"/>               
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="archiveFiles">
        <map:generate type="directory" src="{cmc2:gdir}/{global:ct}/inbox">
          <map:parameter name="dateFormat" value="yyyy-MM-dd HH:mm"/>
          <map:parameter name="depth" value="1"/>
          <map:parameter name="include" value=".*"/>
        </map:generate>
        <map:transform src="xsl/dir2shell_move.xsl">
          <map:parameter name="sourceDir" value="../{global:gdir}{global:ct}/inbox"/>
          <map:parameter name="targetDir" value="../{global:gdir}{global:ct}/processed"/>
        </map:transform>
        <map:transform type="shell"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
    </map:pipeline>
  </map:pipelines>
</map:sitemap>
