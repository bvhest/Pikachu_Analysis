<?xml version="1.0" encoding="UTF-8"?>
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">

  <map:resources>
    <!-- the sql resource provides a central place to edit database details -->
    <map:resource name="sql">
      <map:transform type="sql">
        <map:parameter name="use-connection" value="oracleDbCMC"/>
        <map:parameter name="clob-encoding" value="UTF-8"/>
      </map:transform>
    </map:resource>
  </map:resources>

  <map:pipelines>

    <map:component-configurations>
      <global-variables>
        <ct>ObjectCategorization</ct>
      </global-variables>
    </map:component-configurations>

    <map:pipeline type="noncaching">
      <!-- 
        {1} timestamp
      -->
      <map:match pattern="runMain/*">
      
        <map:select type="parameter">
          <map:parameter name="parameter-selector-test" value="{request-param:mergeinboxfiles}"/>
          <map:when test="false">
          </map:when>
          <map:otherwise>
            <map:act type="copy-source" src="cocoon:/mergeInboxFiles/{1}">
              <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/merge_inbox_report.xml"/>
            </map:act> 
          </map:otherwise>
        </map:select>

        <map:act type="copy-source" src="cocoon:/processFiles/{1}">
          <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/processFiles_report.xml"/>
        </map:act>  
        
        <map:act type="copy-source" src="cocoon:/mergeExternalTable">
          <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/merge_report.xml"/>
        </map:act> 
 
<!--- load objects start TO BE DELETED ONE DAY-->
       <map:act type="copy-source" src="{cmc2:svcURL}/batch/import/splitFiles/{global:ct}/{1}?usestx=yes&amp;filename=CE_CategorizationTree.xml">
          <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/splitFiles_report.xml"/>
        </map:act>
        <!-- compare each product file with cached file, delete if identical -->
        <map:act type="copy-source" src="cocoon:/dir2FilterCategorizationFiles?filename=CE_Categorization">
          <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/dir2FilterCategorizationFiles.xml"/>
        </map:act>
 
        <!-- process the remaining split files -->
        <map:act type="copy-source" src="{cmc2:svcURL}/store/importExecDelta/batch/import/processFiles/{global:ct}/{1}?includefilepattern=CE_Categorization">
        <!--map:act type="copy-source" src="{cmc2:svcURL}/batch/import/processFiles/{global:ct}/{1}?includefilepattern=Categorization"-->
          <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/processInternalCatFiles_report.xml"/>
        </map:act>
 
 <!-- load objects end -->
        
        
        <map:act type="copy-source" src="{cmc2:svcURL}/processControl/archiveFiles/inbox/{global:ct}">
          <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/archive_report.xml"/>
        </map:act>
       
        <map:generate src="cocoon:/report/{1}"/>
        <map:serialize type="xml"/>
      </map:match>

      <map:match pattern="mergeInboxFiles/*">
        <map:generate type="directory" src="{cmc2:gdir}/{global:ct}/inbox">
          <map:parameter name="depth" value="1"/>
          <map:parameter name="include" value=".*\.xml"/>
          <map:parameter name="exclude" value="^CategorizationTree_\d{14}.xml$"/>
        </map:generate>
        <map:transform type="xslt-saxon" src="xsl/include2readFile.xsl">
          <map:parameter name="dir" value="inbox"/>
        </map:transform>
        <map:transform type="include"/>
        <map:transform type="xslt-saxon" src="xsl/mergeCategorizations.xsl">
          <map:parameter name="src-dir" value="{cmc2:gdir}/{global:ct}/inbox"/>
          <map:parameter name="output-file" value="{cmc2:gdir}/{global:ct}/inbox/CategorizationTree_{1}.xml"/>
        </map:transform>
        <map:transform type="write-source"/>
        <map:transform type="shell"/>
        <map:serialize type="xml"/>
      </map:match>
      
      <map:match pattern="processFiles/*">
        <map:generate type="directory" src="{cmc2:gdir}/{global:ct}/inbox">
          <map:parameter name="depth" value="1"/>
          <map:parameter name="include" value="^CategorizationTree_{1}\.xml$"/>
        </map:generate>
        <map:transform type="xslt-saxon" src="xsl/include2transformXML.xsl">
          <map:parameter name="ts" value="{1}"/>
        </map:transform>
        <map:transform type="cinclude"/>
        <map:serialize type="xml"/>
      </map:match>

     <map:match pattern="transformFile/*/**">
     <!-- 1. timestamp   2.filename (nopath)  -->
        <map:act type="copy-source" src="cocoon:/transformXMLToExternalTable_sub/{1}/{2}">
          <map:parameter name="dest" value="{cmc2:oradata_extDir}/objectcategorization/object_categorization.dat"/>
        </map:act>
        <map:generate src="{cmc2:xmlDir}/empty.xml"/>
        <map:serialize type="xml"/>
      </map:match>
      
      <map:match pattern="transformXMLToExternalTable_sub/*/**">
        <map:generate src="{cmc2:gdir}/{global:ct}/inbox/{2}"/>
        <map:transform type="xslt-saxon" src="xsl/convertTree.xsl"/>
        <map:transform type="xslt-saxon" src="xsl/transformXMLToExternalTable.xsl">
           <map:parameter name="ts" value="{1}"/>
           <map:parameter name="filename" value="{2}"/>
        </map:transform>
        <!-- serialize as .dat external table file -->
        <map:serialize type="text"/>
      </map:match>
      
      <map:match pattern="mergeExternalTable">
        <!-- Generate the file, before doing the merge; just to check that all is ok -->
        <map:generate src="{cmc2:xmlDir}/empty.xml"/>
        <map:transform type="xslt-saxon" src="xsl/mergeExternalTable.xsl"/>
        <map:call resource="sql"/>
        <map:serialize type="xml"/>
      </map:match>
      
        <map:match pattern="report/*">
       <map:generate src="{cmc2:gdir}/{global:ct}/temp/merge_report.xml"/>
        <map:transform type="xslt-saxon" src="xsl/report.xsl">
           <map:parameter name="ts" value="{1}"/>
        </map:transform>
        <map:call resource="sql"/>
        <map:transform type="xslt-saxon" src="xsl/formatReport.xsl">
           <map:parameter name="ts" value="{1}"/>
           <map:parameter name="ct" value="{global:ct}"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>    
      
     <map:match pattern="archiveFile/*">
        <map:generate src="{cmc2:xmlDir}/empty.xml"/>
        <map:transform type="xslt-saxon" src="xsl/archiveFile.xsl">
          <map:parameter name="sourceFile" value="{1}"/>
          <map:parameter name="sourceDir" value="{cmc2:gdir}/{global:ct}/inbox"/>
          <map:parameter name="targetDir" value="{cmc2:gdir}/{global:ct}/processed"/>
        </map:transform>
        <map:transform type="shell"/>
        <map:serialize type="xml"/>
      </map:match>      
      
      
      
           
        <!-- load objects start TO BE DELETED ONE DAY-->
      <map:match pattern="deleteInvalidCacheFiles/*">
        <map:act type="copy-source" src="cocoon:/readCache">
          <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/cache.xml"/>
        </map:act>
        <map:generate src="{cmc2:gdir}/{global:ct}/temp/cache.xml"/>
        <map:transform type="xslt-saxon" src="xsl/masterObjects/sql_retrieveCurrentOCTLs.xsl">
          <map:parameter name="catalogcode" value="MASTER"/>
        </map:transform>
        <map:call resource="sql"/>
        <map:transform type="xslt-saxon" src="xsl/masterObjects/identifyInvalidCacheFiles.xsl">
          <map:parameter name="dir" value="{cmc2:gdir}/{global:ct}/cache"/>
          <map:parameter name="ts" value="{1}"/>
          <map:parameter name="ct" value="{global:ct}"/>
        </map:transform>
        <!-- delete -->
        <map:transform type="shell"/>
        <map:serialize type="xml"/>
      </map:match>
      
      <map:match pattern="readCache">
        <map:generate type="directory" src="{cmc2:gdir}/{global:ct}/cache">
          <map:parameter name="dateFormat" value="yyyy-MM-dd HH:mm"/>
          <map:parameter name="depth" value="1"/>
        </map:generate>
        <map:serialize type="xml"/>
      </map:match>
      
      <map:match pattern="readFile/**">
        <map:generate src="{cmc2:gdir}/{global:ct}/{1}"/>
        <map:serialize type="xml"/>
      </map:match>

      <map:match pattern="dir2FilterCategorizationFiles">
        <map:generate type="directory" src="{cmc2:gdir}/{global:ct}/inbox">
          <map:parameter name="dateFormat" value="yyyy-MM-dd HH:mm"/>
          <map:parameter name="depth" value="1"/>
        </map:generate>
        <map:transform type="xslt-saxon" src="xsl/masterObjects/include_dir2process.xsl">
          <map:parameter name="process" value="filterFile"/>
          <map:parameter name="filename" value="{request-param:filename}"/>
        </map:transform>
        <map:transform type="cinclude"/>
         <map:serialize type="xml"/>
      </map:match>
      
      <map:match pattern="filterFile/*__*.*">
        <map:select type="resource-exists">
          <map:when test="{cmc2:gdir}/{global:ct}/cache/{1}__{2}.{3}">
            <map:aggregate element="ObjectCategorizationToCompare">
              <map:part src="{cmc2:gdir}/{global:ct}/inbox/{1}__{2}.{3}"/>
              <map:part src="{cmc2:gdir}/{global:ct}/cache/{1}__{2}.{3}"/>
            </map:aggregate>
             <map:transform src="xsl/masterObjects/compareCachedContent.xsl"/>
             <map:transform src="xsl/masterObjects/removeFile.xsl">
                <map:parameter name="source" value="{cmc2:gdir}/{global:ct}/inbox/{1}__{2}.{3}"/>
             </map:transform>
             <map:transform type="shell"/>
          </map:when>
          <map:otherwise>
            <!-- leave file it will be moved to cache during archive-->
            <map:generate src="{cmc2:xmlDir}/empty.xml"/>
          </map:otherwise>
        </map:select>
        <map:serialize type="xml"/>
      </map:match>    
     <map:match pattern="archiveFiles">
        <map:generate type="directory" src="{cmc2:gdir}/{global:ct}/inbox">
          <map:parameter name="dateFormat" value="yyyy-MM-dd hh:mm"/>
          <map:parameter name="depth" value="1"/>
          <map:parameter name="include" value=".*"/>
        </map:generate>
        <!-- Delete the batch_ files; they are not needed and take up too much space on the filesystem -->
        <map:transform src="xsl/masterObjects/dir2shell_move.xsl">
          <map:parameter name="sourceDir" value="../{global:gdir}{global:ct}/inbox"/>
          <map:parameter name="targetDir" value="../{global:gdir}{global:ct}/cache"/>
          <map:parameter name="filename" value="{request-param:filename}"/>
        </map:transform>
        <map:transform type="shell"/>
        <map:serialize type="xml"/>
      </map:match>     
      
      
      <!-- load objects end-->    
      
      
    </map:pipeline>
  </map:pipelines>
</map:sitemap>
