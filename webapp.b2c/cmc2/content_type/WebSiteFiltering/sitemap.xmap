<?xml version="1.0" encoding="UTF-8"?>
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">
  
  <map:resources>
    <!-- The sql resource provides a central place to edit database details -->
    <map:resource name="sql">
      <map:transform type="sql">
        <map:parameter name="use-connection" value="oracleDbCMC"/>
        <map:parameter name="clob-encoding" value="UTF-8"/>
      </map:transform>
    </map:resource>
  </map:resources>
  <!-- -->
  <map:components>    
    <map:serializers>    
      <map:serializer logger="sitemap.serializer.xml" mime-type="text/xml" name="xml-indented" src="org.apache.cocoon.serialization.XMLSerializer">
        <encoding>UTF-8</encoding>
        <indent>yes</indent>
      </map:serializer>            
    </map:serializers>    
  </map:components>  
  <!-- -->    
  <map:pipelines>

    <map:component-configurations>
      <global-variables>
        <ct>WebSiteFiltering</ct>
      </global-variables>
    </map:component-configurations>
  
    <map:pipeline type="noncaching">
      <!-- Here is the main pipeline that exeutes the batch processing. 
      In invoking the pipeline the execution timestamp is passed as a parameter along with ct.
        Input parameters: {1} = timestamp
        Output Document: ?
      -->
      <map:match pattern="runMain/*">
        <map:act type="copy-source" src="cocoon:/prepareXslt/nav">
          <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/applyfilters.xsl"/>
        </map:act>
        <map:select type="resource-exists">
          <map:when test="{cmc2:gdir}/{global:ct}/inbox/reload.xml">             
            <map:act type="copy-source" src="{cmc2:svcURL}/batch/localised/createBatches/{global:ct}/master_global?reload=true">
              <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/createBatches_report.xml"/>
            </map:act>  
            <map:act type="copy-source" src="cocoon:/PostProcess/batch/localised/processBatches/{global:ct}/master_global/{1}?reload=true">        
              <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/processBatches_report.xml"/>
            </map:act>                    
          </map:when>
          <map:otherwise>            
            <map:act type="copy-source" src="{cmc2:svcURL}/batch/localised/createBatches/{global:ct}/master_global">       
              <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/createBatches_report.xml"/>
            </map:act>  
            <map:act type="copy-source" src="cocoon:/PostProcess/batch/localised/processBatches/{global:ct}/master_global/{1}">
            <!--map:act type="copy-source" src="{cmc2:svcURL}/batch/localised/processBatches/{global:ct}/master_global/{1}"-->
              <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/processBatches_report.xml"/>
            </map:act>                    
          </map:otherwise>            
        </map:select>                                 
        <map:generate src="{cmc2:gdir}/{global:ct}/temp/processBatches_report.xml"/>        
        <map:serialize type="xml"/>
      </map:match>
      <!--
        Get the filter rules and convert them into an XSLT
        
        {1} = fk | nav, ultimately determines the output format (Navigation based or Filter based)
      -->
      <map:match pattern="prepareXslt/*">
        <map:generate src="{cmc2:svcURL}/common/get/FilterRules/none/filterrules"/>
        <map:transform type="xslt-saxon" src="xsl/filterpaths2xslt_{1}.xsl"/>
        <map:serialize type="xml-indented"/>
      </map:match>
      <!-- -->
      <map:match pattern="PostProcess/**">
        <map:generate src="{cmc2:svcURL}/{1}"/>
        <map:transform src="{cmc2:xslDir}/common/include_writeSource2process.xsl">
          <map:parameter name="process" value="cocoon:/PostProcessEntryFile"/>
        </map:transform>
        <map:transform type="cinclude"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->      
      <map:match pattern="PostProcessEntryFile/**">
        <map:generate src="{1}"/>
        <!-- do all post processing here -->
        <!--
        <map:transform src="xsl/include-global.xsl">
          <map:parameter name="svcURL" value="{cmc2:svcURL}/"/>
        </map:transform>
        <map:transform type="cinclude"/>
        <map:transform src="xsl/enrich.xsl">
          <map:parameter name="mode" value="nav"/>
        </map:transform>
        <map:transform src="xsl/clean.xsl"/>
        -->
        <!-- apply the generated filter XSLT to the entry file -->
        <map:transform type="xslt-saxon" src="{cmc2:gdir}/{global:ct}/temp/applyfilters.xsl"/>
        <!-- now save file -->
        <map:transform type="xslt-saxon" src="{cmc2:xslDir}/common/writeEntry.xsl">
          <map:parameter name="dir" value="{cmc2:gdir}/{global:ct}"/>
          <map:parameter name="prefix" value="p_"/>
        </map:transform>
        <map:transform type="write-source"/>        
        <map:transform src="{cmc2:xslDir}/common/include_writeSource2process.xsl">
          <!-- call deltaSave, except in the case of a reload, in which case call import -->
          <map:parameter name="process"       value="{cmc2:svcURL}/store/deltaSaveEntryFile"/>
          <map:parameter name="reloadProcess" value="{cmc2:svcURL}/store/importEntryFile"/>
          <map:parameter name="reload" value="{request-param:reload}"/>             
        </map:transform>
        <map:transform type="cinclude"/>        
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="process/*/*/**">
       <!--+
            {1} localisation {2} timestamp {3} objectId 
           +-->      
        <map:generate src="{cmc2:xmlDir}/empty.xml"/>
        <map:transform src="{cmc2:xslDir}/common/create_entry_record.xsl">
          <map:parameter name="o" value="{3}"/>
          <map:parameter name="ct" value="{global:ct}"/>
          <map:parameter name="l" value="{1}"/>
          <map:parameter name="ts" value="{2}"/>
          <map:parameter name="reload" value="{request-param:reload}"/>                 
        </map:transform>
        <map:call resource="sql"/>                   
        <map:transform src="xsl/sql_include-content.xsl"/>
        <map:call resource="sql"/>                 
        <!-- the actual processing -->
        <map:transform src="xsl/process_entries.xsl">
          <map:parameter name="reload" value="{request-param:reload}"/>          
        </map:transform> 
        <map:transform src="xsl/categorizeProduct.xsl"/>
        <map:serialize type="xml"/>
      </map:match>
    </map:pipeline>
  </map:pipelines>
</map:sitemap>
