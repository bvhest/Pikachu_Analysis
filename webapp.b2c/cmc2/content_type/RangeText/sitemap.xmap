<?xml version="1.0" encoding="UTF-8"?>
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">
  

  <map:components>  
    <map:serializers>    
      <map:serializer logger="sitemap.serializer.xml" mime-type="text/xml" name="xml-indented" src="org.apache.cocoon.serialization.XMLSerializer">
        <encoding>UTF-8</encoding>
        <indent>yes</indent>
      </map:serializer>            
    </map:serializers>    
  </map:components>
  
  <map:resources>
    <!-- the sql resource provides a central place to edit database details -->
    <map:resource name="sql">
      <map:transform type="sql">
        <map:parameter name="use-connection" value="oracleDbCMC"/>
        <map:parameter name="clob-encoding" value="UTF-8"/>
      </map:transform>
    </map:resource>
  </map:resources>  
  
  
  <map:pipelines>
    <!-- -->
    <map:component-configurations>
      <global-variables>
        <ct>RangeText</ct>
      </global-variables>
    </map:component-configurations>
    <!-- -->  
    <map:pipeline type="noncaching">
      <!-- Here is the main pipeline that executes the batch processing. 
        In invoking the pipeline the execution timestamp is passed as a parameter along with ct.
        Input parameters: {1} = timestamp
      -->
      <map:match pattern="runMain/*">  
        <map:select type="resource-exists">
          <map:when test="{cmc2:gdir}/{global:ct}/inbox/reload.xml">     
            <map:act type="copy-source" src="{cmc2:svcURL}/store/saveSec/batch/sync/processBatches/{global:ct}/{1}?reload=true">
            <!--map:act type="copy-source" src="{cmc2:svcURL}/batch/sync/processBatches/{global:ct}/{1}?reload=true"-->
              <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/processBatches_report.xml"/>
            </map:act>
            <map:act type="copy-source" src="{cmc2:svcURL}/processControl/archiveFiles/inbox/{global:ct}">
              <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/archive_report.xml"/>
            </map:act>            
          </map:when>
          <map:otherwise>
            <map:act type="copy-source" src="{cmc2:svcURL}/store/saveSec/batch/sync/processBatches/{global:ct}/{1}">
            <!--map:act type="copy-source" src="{cmc2:svcURL}/batch/sync/processBatches/{global:ct}/{1}"-->
              <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/processBatches_report.xml"/>
            </map:act>          
          </map:otherwise>          
        </map:select>
        <map:generate src="{cmc2:gdir}/{global:ct}/temp/processBatches_report.xml"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="process/*/*/*/**">
      <!-- {1} localisation {2} timestamp {3} masterlastmodified_ts {4}objectId -->      
        <map:generate src="{cmc2:xmlDir}/empty.xml"/>
        <!-- create an entry record for the target octl -->
        <map:transform src="{cmc2:xslDir}/common/create_entry_record.xsl">
          <map:parameter name="o" value="{4}"/>
          <map:parameter name="ct" value="{global:ct}"/>
          <map:parameter name="l" value="{1}"/>
          <map:parameter name="ts" value="{2}"/>
          <map:parameter name="reload" value="{request-param:reload}"/>                
        </map:transform>
        <map:call resource="sql"/>     
        <!-- include the content from the source octl -->
        <map:transform src="xsl/include_content.xsl">
          <map:parameter name="svcURL" value="{cmc2:svcURL}/"/>
          <map:parameter name="o" value="{4}"/>
          <map:parameter name="ct" value="RangeText_Translated"/>
          <map:parameter name="l" value="{1}"/>
          <map:parameter name="mlm" value="{3}"/>
          <map:parameter name="reload" value="{request-param:reload}"/>
        </map:transform>
        <map:transform type="cinclude"/>  
        <map:transform src="xsl/process_entries.xsl">
          <map:parameter name="reload" value="{request-param:reload}"/>          
        </map:transform>                  
        <!-- Convert to correct xUCDM version -->
        <map:transform type="xslt-saxon" src="xsl/convertTreeNode.xsl"/>
        <!-- Get existing secondary relations -->
        <map:transform type="xslt-saxon" src="{cmc2:xslDir}/common/get_secondaries.xsl">
          <map:parameter name="o" value="{4}"/>
          <map:parameter name="ct" value="{global:ct}"/>
          <map:parameter name="l" value="{1}"/>
        </map:transform>
        <map:call resource="sql"/>     
        <!-- Derive secondaries-->
        <map:transform src="xsl/secondaryDerivation.xsl">
          <map:parameter name="svcURL" value="{cmc2:svcURL}/"/>
        </map:transform>
        <!-- Include the secondary content -->
        <map:transform type="cinclude"/>
        <map:transform src="xsl/processSecondaries.xsl"/>
        <!-- The normal processing -->
        <map:transform src="{cmc2:xslDir}/common/productAttributes.xsl"/>
        <map:serialize type="xml"/>
      </map:match>
    </map:pipeline>
  </map:pipelines>
</map:sitemap>
