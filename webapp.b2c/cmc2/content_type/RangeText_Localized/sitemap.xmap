<?xml version="1.0" encoding="UTF-8"?>
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">

  <map:resources>
    <map:resource name="sql">
      <map:transform type="sql">
        <map:parameter name="use-connection" value="oracleDbCMC"/>
        <map:parameter name="clob-encoding" value="UTF-8"/>
      </map:transform>
    </map:resource>
  </map:resources>

  <map:pipelines>

    <map:component-configurations>
      <global-variables>
        <ct>RangeText_Localized</ct>
      </global-variables>
    </map:component-configurations>

    <map:pipeline type="noncaching">
      <!-- Here is the main pipeline that executes the batch processing.
        In invoking the pipeline the execution timestamp is passed as a parameter along with ct.
        Input parameters: {1} = timestamp
        Output Document: ?
      -->
      <map:match pattern="runMain/*">
        <map:select type="resource-exists">
          <map:when test="{cmc2:gdir}/{global:ct}/inbox/reload.xml">
            <map:act type="copy-source" src="{cmc2:svcURL}/batch/localised/createBatches/{global:ct}?reload=true">
              <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/createBatches_report.xml"/>
            </map:act>
            <map:act type="copy-source" src="{cmc2:svcURL}/store/save/batch/localised/processBatches/{global:ct}/{1}?reload=true">
              <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/processBatches_report.xml"/>
            </map:act>
            <map:act type="copy-source" src="{cmc2:svcURL}/processControl/archiveFiles/inbox/{global:ct}">
              <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/archive_report.xml"/>
            </map:act>
          </map:when>
          <map:otherwise>
            <map:act type="copy-source" src="{cmc2:svcURL}/batch/localised/createBatches/{global:ct}">
              <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/createBatches_report.xml"/>
            </map:act>
            <map:act type="copy-source" src="{cmc2:svcURL}/store/deltaSave/batch/localised/processBatches/{global:ct}/{1}">
            <!--map:act type="copy-source" src="{cmc2:svcURL}/batch/localised/processBatches/{global:ct}/{1}"-->
              <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/processBatches_report.xml"/>
            </map:act>
            <map:act type="copy-source" src="{cmc2:svcURL}/processControl/archiveFiles/inbox/{global:ct}">
              <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/archive_report.xml"/>
            </map:act>
          </map:otherwise>
        </map:select>
        <map:generate src="{cmc2:gdir}/{global:ct}/temp/processBatches_report.xml"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="process/*/*/**">
      <!-- {1} localisation {2} timestamp {3} objectId -->
        <map:generate src="{cmc2:xmlDir}/empty.xml"/>
        <!-- create an entry record for the target octl -->
        <map:transform src="{cmc2:xslDir}/common/create_entry_record.xsl">
          <map:parameter name="o" value="{3}"/>
          <map:parameter name="ct" value="{global:ct}"/>
          <map:parameter name="l" value="{1}"/>
          <map:parameter name="ts" value="{2}"/>
          <map:parameter name="reload" value="{request-param:reload}"/>
        </map:transform>
        <map:call resource="sql"/>
        <!-- include the content from the source octl -->
        <map:transform src="xsl/include_content.xsl">
          <map:parameter name="svcURL" value="{cmc2:svcURL}/"/>
          <map:parameter name="o" value="{3}"/>
          <map:parameter name="ct" value="RangeText_Raw"/>
          <map:parameter name="l" value="none"/>
        </map:transform>
        <map:transform type="include"/>
        <!-- the actual processing -->
        <map:transform src="xsl/process_entries.xsl">
          <map:parameter name="reload" value="{request-param:reload}"/>
        </map:transform>
        <!-- include secondaries-->
        <map:transform src="{cmc2:xslDir}/common/sql_getSecondaryContent.xsl">
          <map:parameter name="o" value="{3}"/>
          <map:parameter name="ct" value="{global:ct}"/>
          <map:parameter name="l" value="{1}"/>
        </map:transform>
        <map:call resource="sql"/>
        <!-- perform country-specific transformation -->
        <map:transform type="xslt-saxon" src="xsl/localise.xsl">
          <map:parameter name="l" value="{1}"/>
          <map:parameter name="xmlDir" value="{cmc2:xmlDir}/"/>
        </map:transform>
        <map:transform src="{cmc2:xslDir}/common/productAttributes.xsl"/>
        <map:serialize type="xml"/>
      </map:match>
    </map:pipeline>
  </map:pipelines>
</map:sitemap>