<?xml version="1.0" encoding="UTF-8"?>
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">
  <map:resources>
    <!-- the sql resource provides a central place to edit database details -->
    <map:resource name="sql">
      <map:transform type="sql">
        <map:parameter name="use-connection" value="oracleDbCMC"/>
        <map:parameter name="clob-encoding" value="UTF-8"/>
      </map:transform>
    </map:resource>
  </map:resources>
  <map:pipelines>
    <!-- -->
    <map:component-configurations>
      <global-variables>
        <ct>DerivedCategorization</ct>
      </global-variables>
    </map:component-configurations>
    <!-- -->
    <map:pipeline type="noncaching">
      <!-- Here is the main pipeline that exeutes the batch processing.
      In invoking the pipeline the execution timestamp is passed as a parameter along with ct.
        Input parameters: {1} = timestamp
        Output Document: Result of writing the report document to file
      -->
      <map:match pattern="runMain/*">
        <map:act type="copy-source" src="cocoon:/processContent/{global:ct}/{1}">
          <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/processContent_report.xml"/>
        </map:act>
        
        <map:act type="copy-source" src="cocoon:/postProcessContent/{global:ct}/{1}">
          <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/postProcessContent_report.xml"/>
        </map:act>
        
        <map:aggregate element="root">
    		<map:part src="{cmc2:gdir}/{global:ct}/temp/processContent_report.xml"/>
    		<map:part src="{cmc2:gdir}/{global:ct}/temp/postProcessContent_report.xml"/>
  		  </map:aggregate>
  		  <map:serialize type="xml"/>
		</map:match>
		
      <!-- -->
      <map:match pattern="postProcessContent/*/*">
      <map:generate src="{cmc2:gdir}/{global:ct}/temp/processContent_report.xml"/> 
     <map:transform type="xslt-saxon" src="xsl/checkCatalogType.xsl">
            	<map:parameter name="ct" value="{1}"/>
          		<map:parameter name="timestamp" value="{2}"/> 
            </map:transform>
            <map:transform type="include"/>
        <map:serialize type="xml"/>
      </map:match>
      
       <!-- -->
      <map:match pattern="processUnmapped/*/*">
        <!--Parameters:   {1} = content_type  {2} timestamp-->
        <map:generate src="{cmc2:xmlDir}/empty.xml"/>
        <map:transform src="xsl/sql_getUnmappedContent.xsl">
          <map:parameter name="ct" value="{1}"/>
          <map:parameter name="timestamp" value="{2}"/>
        </map:transform>
        <map:call resource="sql"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      
      <map:match pattern="processContent/*/*">
        <!--Parameters:   {1} = content_type  {2} timestamp-->
        <map:generate type="directory" src="{cmc2:gdir}/{1}/inbox">
          <map:parameter name="depth" value="1"/>
          <map:parameter name="include" value=".*\.xml$"/>
        </map:generate>
        <map:transform type="xslt-saxon" src="xsl/include.xsl">
          <map:parameter name="ct" value="{1}"/>
          <map:parameter name="timestamp" value="{2}"/>
        </map:transform>
        <map:transform type="cinclude"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <!-- -->
      <map:match pattern="processFiles/*/*">
        <!--Parameters:   {1} = content_type  {2} timestamp-->
        <map:act type="copy-source" src="cocoon:/PostProcess/batch/import/processFiles/{1}/{2}">
         <!--map:act type="copy-source" src="{cmc2:svcURL}/batch/import/processFiles/{1}/{2}"-->
          <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/processFiles_report.xml"/>
        </map:act>
        <map:act type="copy-source" src="{cmc2:svcURL}/processControl/archiveFiles/inbox/{global:ct}">
          <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/archive_report.xml"/>
        </map:act>
        <map:aggregate element="reports">
          <map:part src="{cmc2:gdir}/{global:ct}/temp/processFiles_report.xml"/>
          <map:part src="{cmc2:gdir}/{global:ct}/temp/archive_report.xml"/>
        </map:aggregate>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="reprocessExistingContent/*/*">
        <!--Parameters:   {1} = content_type  {2} timestamp-->
        <map:generate src="{cmc2:xmlDir}/empty.xml"/>
        <map:transform src="xsl/sql_getExistingContent.xsl">
          <map:parameter name="ct" value="{1}"/>
          <map:parameter name="timestamp" value="{2}"/>
        </map:transform>
        <map:call resource="sql"/>
        <map:transform src="xsl/cleanExistingContent.xsl"/>
        <map:transform type="xslt-saxon" src="xsl/create_entry_records.xsl">
          <map:parameter name="ct" value="{1}"/>
          <map:parameter name="l" value="na"/>
          <map:parameter name="ts" value="{2}"/>
          <map:parameter name="dir" value="{cmc2:gdir}/{1}/outbox"/>
          <map:parameter name="batchnumber" value="currentcontent"/>
        </map:transform>
        <map:call resource="sql"/>
        <map:transform type="xslt-saxon" src="{cmc2:svcDir}/batch/import/xsl/validate.xsl"/>
        <map:transform type="xslt-saxon" src="{cmc2:xslDir}/common/writeEntry.xsl">
          <map:parameter name="dir" value="{cmc2:gdir}/{1}"/>
        </map:transform>
        <map:transform type="write-source"/>
       <map:transform src="{cmc2:xslDir}/common/include_writeSource2process.xsl">
          <map:parameter name="process" value="cocoon:/PostProcessEntryFile_Existing"/>
        </map:transform>
        <map:transform type="cinclude"/>
        <map:serialize type="xml"/>
	</map:match>
	
	   <map:match pattern="PostProcessEntryFile_Existing/**">
		   <map:generate src="{1}"/>
        <map:transform type="xslt-saxon" src="xsl/include2transformXML.xsl">
          <map:parameter name="filename" value="{1}"/>
          <map:parameter name="storeurl" value="nostore"/>
        </map:transform>
        <map:transform type="cinclude"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="PostProcess/**">
        <map:generate src="{cmc2:svcURL}/{1}"/>
        <map:transform src="{cmc2:xslDir}/common/include_writeSource2process.xsl">
          <map:parameter name="process" value="cocoon:/PostProcessEntryFile"/>
        </map:transform>
        <map:transform type="cinclude"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="PostProcessEntryFile/**">
        <map:generate src="{1}"/>
        <map:transform type="xslt-saxon" src="xsl/include2transformXML.xsl">
          <map:parameter name="filename" value="{1}"/>
          <map:parameter name="storeurl" value="{cmc2:svcURL}/store/importEntryFile/"/>
        </map:transform>
        <map:transform type="cinclude"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
      <map:match pattern="transformXMLToExternalTable/**">
        <map:act type="copy-source" src="cocoon:/transformXMLToExternalTable_sub/{1}">
          <map:parameter name="dest" value="{cmc2:oradata_extDir}/derivedcategorization/{request-param:destination}"/>
        </map:act>
        <map:generate src="{cmc2:xmlDir}/empty.xml"/>
        <map:serialize type="xml"/>
      </map:match>
	  <!-- -->
      <map:match pattern="transformXMLToExternalTable_sub/**">
        <map:generate src="{1}"/>
        <map:transform type="xslt-saxon" src="xsl/sql_deriveAssignments.xsl"/>
        <map:call resource="sql"/>
        <map:transform type="xslt-saxon" src="xsl/transformXMLToExternalTable.xsl"/>
        <!-- serialize as .dat external table file -->
        <map:serialize type="text"/>
      </map:match>
      <!-- -->
      <map:match pattern="mergeExternalTable/**">
        <!-- Generate the file, before doing the merge; just to check that all is ok -->
        <map:generate src="{1}"/>
        <map:transform type="xslt-saxon" src="xsl/mergeExternalTable.xsl"/>
        <map:call resource="sql"/>
        <map:serialize type="xml"/>
      </map:match>
      <!-- -->
    </map:pipeline>
  </map:pipelines>
</map:sitemap>
