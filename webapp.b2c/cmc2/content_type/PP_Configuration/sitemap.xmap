<?xml version="1.0" encoding="UTF-8"?>
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">
  
  <map:resources>
    <!-- the sql resource provides a central place to edit database details -->
    <map:resource name="sql">
      <map:transform type="sql">
        <map:parameter name="use-connection" value="oracleDbCMC"/>
        <map:parameter name="clob-encoding" value="UTF-8"/>
      </map:transform>
    </map:resource>
  </map:resources>
  <!-- -->  
  <map:pipelines> 
    <map:component-configurations>
      <global-variables>
        <ct>PP_Configuration</ct>
      </global-variables>
    </map:component-configurations>
    <!-- -->
    <map:pipeline type="noncaching">
      <!--+
           Here is the main pipeline that exeutes the batch processing. 
           In invoking the pipeline the execution timestamp is passed as a parameter along with ct.
           Input parameters: {1} = timestamp
           Output Document: Result of writing the report document to file
          +-->
      <map:match pattern="runMain/*">
        <!-- Run catalog_definition to initiate the creation of placeholders. A filefilter is used to only 
           + process the catalog created for the packaging project.
           + The next step, actually creating the placeholders, is included in the catalog_definition-content type in a 
           + similar way as placeholders are created for the FastLane processing; directly for a specific object. 
           +-->
        <map:act type="copy-source" src="cocoon://cmc2/content_type/catalog_definition?schedule_id=530&amp;fileFilter=PackagingCatalog.*">
          <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/run_catalog_definition_report.xml"/>
        </map:act> 
        <!-- start actual PP_Configuration process -->
        <map:act type="copy-source" src="{cmc2:svcURL}/batch/import/createBatches/{global:ct}/{1}">
          <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/createBatches_report.xml"/>
        </map:act>
        <map:act type="copy-source" src="{cmc2:svcURL}/store/import/batch/import/processBatches/{global:ct}/{1}?reload=false">
          <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/processBatches_report.xml"/>
        </map:act>          
        <map:act type="copy-source" src="{cmc2:svcURL}/processControl/archiveFiles/inbox/{global:ct}">
          <map:parameter name="dest" value="{cmc2:gdir}/{global:ct}/temp/archive_report.xml"/>
        </map:act>        
        <map:generate src="{cmc2:gdir}/{global:ct}/temp/processBatches_report.xml"/>  
        <map:serialize type="xml"/>  
      </map:match>            
      <!-- -->
      <map:match pattern="process/*/*/**">
       <!-- {1} batchnumber {2} timestamp {3} filename -->             
        <map:generate src="{cmc2:gdir}/{global:ct}/inbox/{3}"/>
        <map:transform type="xslt-saxon" src="xsl/create_entry_records.xsl">
          <map:parameter name="ct" value="{global:ct}"/>
          <map:parameter name="l" value="none"/>
          <map:parameter name="batchnumber" value="{1}"/>          
          <map:parameter name="ts" value="{2}"/>
          <map:parameter name="dir" value="{cmc2:gdir}/{global:ct}/outbox"/>          
        </map:transform>
        <map:call resource="sql"/>       
        <!-- the actual processing -->      
        <map:serialize type="xml"/>
      </map:match>      
      <!-- -->
    </map:pipeline>
  </map:pipelines>
</map:sitemap>
