<?xml version="1.0"?>
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">
	<!-- =========================== Pipelines ================================= -->
	<map:pipelines>
		<map:component-configurations>
			<authentication-manager>
				<handlers>
					<!-- A handler is responsible for protecting documents (pipelines).
			        The handler requires three configuration values. One of them is
			        a unique name that is used as a reference for the handler.
			        The other values are documented inline below.   -->
					<handler name="ldaphandler">
						<!-- The redirect-to configuration defines a pipeline that is called
						whenever a not authenticated user tries to access a protected
						document (pipeline) -->
						<redirect-to uri="cocoon:/login"/>
						<!-- The authentication configuration defines the authentication process.
						 In this example, an internal pipeline "authenticate" is called.
						 This pipeline gets all necessary information like user name and
						 password as parameters and tries to authenticate this user.
						 On successful authentication the pipeline delivers a specific
						 XML format.  -->
						<authentication uri="cocoon:raw:/authenticate"/>
						<!-- In addition you can specifiy a logout-uri parameter above. Then
						the pipeline denoted by that parameter is called on logout.    -->
					</handler>
				</handlers>
			</authentication-manager>
		<!--  -->
			
		</map:component-configurations>
		<!--  -->
		<map:pipeline>
			<!-- This is the authentication resource -->
			<map:match pattern="authenticate">
				<map:generate src="login/userlist.xml" label="step1"/>
				<map:transform src="login/authenticate.xsl" label="step2">
					<map:parameter name="use-request-parameters" value="true"/>
				</map:transform>
				<map:serialize type="xml"/>
			</map:match>
			<!-- This is the ldap authentication resource -->
			<map:match pattern="ldap_authenticate">
				<!-- Read the list with allowed users-->
				<map:generate src="login/userlist.xml" label="step1"/>
				<!-- Create an ID for the user who is trying to log in - if no match, no request is fired -->
				<map:transform src="login/ldap_authenticate.xsl" label="step2">
					<map:parameter name="use-request-parameters" value="true"/>
				</map:transform>
				<!-- For every ID, create an authenticate request -->
				<map:transform src="login/ldap_generate.xsl" label="step3">
					<map:parameter name="use-request-parameters" value="true"/>
				</map:transform>
				<!-- Send the query -->
				<map:transform type="ldap" label="step4">
					<map:parameter name="serverurl" value="ldap://LDAP.gdc1.ce.philips.com"/>  
					<map:parameter name="port" value="389"/>  
					<map:parameter name="rootdn" value="{request-param:name}"/>
					<map:parameter name="password" value="{request-param:password}"/>
				</map:transform>
				<!-- Pre process answer -->
				<map:transform src="login/ldap_process_answer.xsl" label="step5">
					<map:parameter name="use-request-parameters" value="true"/>
				</map:transform>
				<!-- Create the ID - for the second time - and this time from the LDAP answer -->
				<map:transform src="login/ldap_authenticate.xsl" label="step6">
					<map:parameter name="use-request-parameters" value="true"/>
				</map:transform>
				<map:serialize type="xml"/>
			</map:match>
		</map:pipeline>
		<!-- === Static content === -->
		<map:pipeline>
			<!-- additional functionality -->
			<map:match pattern="javascript/*.js">
				<map:read src="javascript/{1}.js"/>
			</map:match>
			<map:match pattern="javascript/*.jsp">
				<map:read src="javascript/{1}.jsp"/>
			</map:match>
			<map:match pattern="javascript/*.asp">
				<map:read src="javascript/{1}.asp"/>
			</map:match>
			<map:match pattern="javascript/*.htc">
				<map:read src="javascript/{1}.htc"/>
			</map:match>
			<map:match pattern="javascript/*.php">
				<map:read src="javascript/{1}.php"/>
			</map:match>
			<map:match pattern="javascript/*.swf">
				<map:read src="javascript/{1}.swf"/>
			</map:match>
			<!-- layout -->
			<map:match pattern="themes/*.css">
				<map:read src="themes/{1}.css"/>
			</map:match>
			<map:match pattern="login/*.jpg">
				<map:read src="login/{1}.jpg" mime-type="image/jpg"/>
			</map:match>
			<map:match pattern="themes/images/*.*">
				<map:read src="themes/images/{1}.{2}" mime-type="image/gif"/>
			</map:match>
			<map:match pattern="themes/images/**/*.*">
				<map:read src="themes/images/{1}/{2}.{3}" mime-type="image/gif"/>
			</map:match>
		</map:pipeline>
		<!--  -->
		<map:pipeline>
			<map:match pattern="">
				<map:redirect-to uri="login"/>
			</map:match>
			<!-- ================= -->
			<!-- Simple login page -->
			<!-- ================= -->
			<map:match pattern="login">
				<!-- if we are already logged in, redirect to the protected document -->
				<map:act type="auth-loggedIn">
					<map:parameter name="handler" value="ldaphandler"/>
					<map:redirect-to uri="home?section=home"/>
				</map:act>
				<map:generate src="login/login.xml"/>
				<map:transform src="login/simple-page2html.xsl">
					<map:parameter name="gui_url" value="{global:gui_url}"/>
					<map:parameter name="internalSystemId" value="{cmc2:intSystemId}"/>
                    <map:parameter name="publicSystemId" value="{cmc2:pubSystemId}"/>
				</map:transform>
				<map:transform src="pages/version.xsl"/>
				<map:transform type="encodeURL"/>
				<map:serialize type="xhtml"/>
			</map:match>
			<map:match pattern="**/login">
				<!-- if we are already logged in, redirect to the protected document -->
				<map:act type="auth-loggedIn">
					<map:parameter name="handler" value="ldaphandler"/>
					<map:redirect-to uri="home?section=home"/>
				</map:act>
				<map:generate src="login/login.xml"/>
				<map:transform src="login/simple-page2html.xsl">
					<map:parameter name="gui_url" value="{global:gui_url}"/>
                    <map:parameter name="internalSystemId" value="{cmc2:intSystemId}"/>
                    <map:parameter name="publicSystemId" value="{cmc2:pubSystemId}"/>
				</map:transform>
				<map:transform src="pages/version.xsl"/>
				<map:transform type="encodeURL"/>
				<map:serialize type="xhtml"/>
			</map:match>
			<!-- ========================================= -->
			<!-- Form target which performs auth service   -->
			<!-- ========================================= -->
			<map:match pattern="do-login">
				<map:act type="auth-loggedIn">
					<map:parameter name="handler" value="ldaphandler"/>
					<map:redirect-to uri="home?section=home"/>
				</map:act>
				<!-- try to login -->
				<map:act type="auth-login">
					<map:parameter name="handler" value="ldaphandler"/>
					<map:parameter name="parameter_name" value="{request-param:username}"/>
					<map:parameter name="parameter_password" value="{request-param:password}"/>
					<map:redirect-to uri="home?section=home"/>
				</map:act>
				<!-- something was wrong, try it again -->
				<map:redirect-to uri="login"/>
			</map:match>
			<!-- ========================================= -->
			<!-- Logout link which invalidates the session -->
			<!-- ========================================= -->
			<map:match pattern="do-logout">
				<map:act type="auth-protect">
					<map:parameter name="handler" value="ldaphandler"/>
					<map:act type="auth-logout"/>
				</map:act>
				<map:redirect-to uri="login"/>
			</map:match>
			<!-- -->
			<map:match pattern="**">
				<map:act type="auth-protect">
					<map:parameter name="handler" value="ldaphandler"/>
					<map:mount src="gui.xmap" uri-prefix="" check-reload="yes"/>
				</map:act>
				<map:redirect-to uri="{global:gui_url}login"/>
			</map:match>
		</map:pipeline>
	</map:pipelines>
	<!-- -->
	<map:views>
		<map:view name="step1" from-label="step1">
			<map:serialize type="xml"/>
		</map:view>
		<map:view name="step2" from-label="step2">
			<map:serialize type="xml"/>
		</map:view>
		<map:view name="step3" from-label="step3">
			<map:serialize type="xml"/>
		</map:view>
		<map:view name="step4" from-label="step4">
			<map:serialize type="xml"/>
		</map:view>
		<map:view name="step5" from-label="step5">
			<map:serialize type="xml"/>
		</map:view>
		<map:view name="step6" from-label="step6">
			<map:serialize type="xml"/>
		</map:view>
	</map:views>
	<!-- -->
</map:sitemap>
